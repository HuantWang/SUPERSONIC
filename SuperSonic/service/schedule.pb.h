// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: schedule.proto

#ifndef PROTOBUF_schedule_2eproto__INCLUDED
#define PROTOBUF_schedule_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_schedule_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[16];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsScheduleInitRequestImpl();
void InitDefaultsScheduleInitRequest();
void InitDefaultsScheduleInitResponseImpl();
void InitDefaultsScheduleInitResponse();
void InitDefaultsScheduleStepRequestImpl();
void InitDefaultsScheduleStepRequest();
void InitDefaultsScheduleStepResponseImpl();
void InitDefaultsScheduleStepResponse();
void InitDefaultsScheduleResetRequestImpl();
void InitDefaultsScheduleResetRequest();
void InitDefaultsScheduleResetResponseImpl();
void InitDefaultsScheduleResetResponse();
void InitDefaultsScheduleRenderRequestImpl();
void InitDefaultsScheduleRenderRequest();
void InitDefaultsScheduleRenderResponseImpl();
void InitDefaultsScheduleRenderResponse();
void InitDefaultsScheduleCloseRequestImpl();
void InitDefaultsScheduleCloseRequest();
void InitDefaultsScheduleCloseResponseImpl();
void InitDefaultsScheduleCloseResponse();
void InitDefaultsOperationRequestImpl();
void InitDefaultsOperationRequest();
void InitDefaultsOperationResponseImpl();
void InitDefaultsOperationResponse();
void InitDefaultsTvmRequestImpl();
void InitDefaultsTvmRequest();
void InitDefaultsTvmResponseImpl();
void InitDefaultsTvmResponse();
void InitDefaultsMsgStokeRequestImpl();
void InitDefaultsMsgStokeRequest();
void InitDefaultsMsgStokeResponseImpl();
void InitDefaultsMsgStokeResponse();
inline void InitDefaults() {
  InitDefaultsScheduleInitRequest();
  InitDefaultsScheduleInitResponse();
  InitDefaultsScheduleStepRequest();
  InitDefaultsScheduleStepResponse();
  InitDefaultsScheduleResetRequest();
  InitDefaultsScheduleResetResponse();
  InitDefaultsScheduleRenderRequest();
  InitDefaultsScheduleRenderResponse();
  InitDefaultsScheduleCloseRequest();
  InitDefaultsScheduleCloseResponse();
  InitDefaultsOperationRequest();
  InitDefaultsOperationResponse();
  InitDefaultsTvmRequest();
  InitDefaultsTvmResponse();
  InitDefaultsMsgStokeRequest();
  InitDefaultsMsgStokeResponse();
}
}  // namespace protobuf_schedule_2eproto
class MsgStokeRequest;
class MsgStokeRequestDefaultTypeInternal;
extern MsgStokeRequestDefaultTypeInternal _MsgStokeRequest_default_instance_;
class MsgStokeResponse;
class MsgStokeResponseDefaultTypeInternal;
extern MsgStokeResponseDefaultTypeInternal _MsgStokeResponse_default_instance_;
class OperationRequest;
class OperationRequestDefaultTypeInternal;
extern OperationRequestDefaultTypeInternal _OperationRequest_default_instance_;
class OperationResponse;
class OperationResponseDefaultTypeInternal;
extern OperationResponseDefaultTypeInternal _OperationResponse_default_instance_;
class ScheduleCloseRequest;
class ScheduleCloseRequestDefaultTypeInternal;
extern ScheduleCloseRequestDefaultTypeInternal _ScheduleCloseRequest_default_instance_;
class ScheduleCloseResponse;
class ScheduleCloseResponseDefaultTypeInternal;
extern ScheduleCloseResponseDefaultTypeInternal _ScheduleCloseResponse_default_instance_;
class ScheduleInitRequest;
class ScheduleInitRequestDefaultTypeInternal;
extern ScheduleInitRequestDefaultTypeInternal _ScheduleInitRequest_default_instance_;
class ScheduleInitResponse;
class ScheduleInitResponseDefaultTypeInternal;
extern ScheduleInitResponseDefaultTypeInternal _ScheduleInitResponse_default_instance_;
class ScheduleRenderRequest;
class ScheduleRenderRequestDefaultTypeInternal;
extern ScheduleRenderRequestDefaultTypeInternal _ScheduleRenderRequest_default_instance_;
class ScheduleRenderResponse;
class ScheduleRenderResponseDefaultTypeInternal;
extern ScheduleRenderResponseDefaultTypeInternal _ScheduleRenderResponse_default_instance_;
class ScheduleResetRequest;
class ScheduleResetRequestDefaultTypeInternal;
extern ScheduleResetRequestDefaultTypeInternal _ScheduleResetRequest_default_instance_;
class ScheduleResetResponse;
class ScheduleResetResponseDefaultTypeInternal;
extern ScheduleResetResponseDefaultTypeInternal _ScheduleResetResponse_default_instance_;
class ScheduleStepRequest;
class ScheduleStepRequestDefaultTypeInternal;
extern ScheduleStepRequestDefaultTypeInternal _ScheduleStepRequest_default_instance_;
class ScheduleStepResponse;
class ScheduleStepResponseDefaultTypeInternal;
extern ScheduleStepResponseDefaultTypeInternal _ScheduleStepResponse_default_instance_;
class TvmRequest;
class TvmRequestDefaultTypeInternal;
extern TvmRequestDefaultTypeInternal _TvmRequest_default_instance_;
class TvmResponse;
class TvmResponseDefaultTypeInternal;
extern TvmResponseDefaultTypeInternal _TvmResponse_default_instance_;

// ===================================================================

class ScheduleInitRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ScheduleInitRequest) */ {
 public:
  ScheduleInitRequest();
  virtual ~ScheduleInitRequest();

  ScheduleInitRequest(const ScheduleInitRequest& from);

  inline ScheduleInitRequest& operator=(const ScheduleInitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScheduleInitRequest(ScheduleInitRequest&& from) noexcept
    : ScheduleInitRequest() {
    *this = ::std::move(from);
  }

  inline ScheduleInitRequest& operator=(ScheduleInitRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScheduleInitRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScheduleInitRequest* internal_default_instance() {
    return reinterpret_cast<const ScheduleInitRequest*>(
               &_ScheduleInitRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ScheduleInitRequest* other);
  friend void swap(ScheduleInitRequest& a, ScheduleInitRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScheduleInitRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ScheduleInitRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScheduleInitRequest& from);
  void MergeFrom(const ScheduleInitRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScheduleInitRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string input_image = 2;
  void clear_input_image();
  static const int kInputImageFieldNumber = 2;
  const ::std::string& input_image() const;
  void set_input_image(const ::std::string& value);
  #if LANG_CXX11
  void set_input_image(::std::string&& value);
  #endif
  void set_input_image(const char* value);
  void set_input_image(const char* value, size_t size);
  ::std::string* mutable_input_image();
  ::std::string* release_input_image();
  void set_allocated_input_image(::std::string* input_image);

  // int32 algorithm_id = 1;
  void clear_algorithm_id();
  static const int kAlgorithmIdFieldNumber = 1;
  ::google::protobuf::int32 algorithm_id() const;
  void set_algorithm_id(::google::protobuf::int32 value);

  // int32 max_stage_directive = 3;
  void clear_max_stage_directive();
  static const int kMaxStageDirectiveFieldNumber = 3;
  ::google::protobuf::int32 max_stage_directive() const;
  void set_max_stage_directive(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ScheduleInitRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr input_image_;
  ::google::protobuf::int32 algorithm_id_;
  ::google::protobuf::int32 max_stage_directive_;
  mutable int _cached_size_;
  friend struct ::protobuf_schedule_2eproto::TableStruct;
  friend void ::protobuf_schedule_2eproto::InitDefaultsScheduleInitRequestImpl();
};
// -------------------------------------------------------------------

class ScheduleInitResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ScheduleInitResponse) */ {
 public:
  ScheduleInitResponse();
  virtual ~ScheduleInitResponse();

  ScheduleInitResponse(const ScheduleInitResponse& from);

  inline ScheduleInitResponse& operator=(const ScheduleInitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScheduleInitResponse(ScheduleInitResponse&& from) noexcept
    : ScheduleInitResponse() {
    *this = ::std::move(from);
  }

  inline ScheduleInitResponse& operator=(ScheduleInitResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScheduleInitResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScheduleInitResponse* internal_default_instance() {
    return reinterpret_cast<const ScheduleInitResponse*>(
               &_ScheduleInitResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ScheduleInitResponse* other);
  friend void swap(ScheduleInitResponse& a, ScheduleInitResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScheduleInitResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ScheduleInitResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScheduleInitResponse& from);
  void MergeFrom(const ScheduleInitResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScheduleInitResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 max_stage = 1;
  void clear_max_stage();
  static const int kMaxStageFieldNumber = 1;
  ::google::protobuf::int32 max_stage() const;
  void set_max_stage(::google::protobuf::int32 value);

  // int32 max_directive = 2;
  void clear_max_directive();
  static const int kMaxDirectiveFieldNumber = 2;
  ::google::protobuf::int32 max_directive() const;
  void set_max_directive(::google::protobuf::int32 value);

  // int32 max_param = 3;
  void clear_max_param();
  static const int kMaxParamFieldNumber = 3;
  ::google::protobuf::int32 max_param() const;
  void set_max_param(::google::protobuf::int32 value);

  // int32 schedule_map_range = 4;
  void clear_schedule_map_range();
  static const int kScheduleMapRangeFieldNumber = 4;
  ::google::protobuf::int32 schedule_map_range() const;
  void set_schedule_map_range(::google::protobuf::int32 value);

  // double init_time_sec = 5;
  void clear_init_time_sec();
  static const int kInitTimeSecFieldNumber = 5;
  double init_time_sec() const;
  void set_init_time_sec(double value);

  // @@protoc_insertion_point(class_scope:ScheduleInitResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 max_stage_;
  ::google::protobuf::int32 max_directive_;
  ::google::protobuf::int32 max_param_;
  ::google::protobuf::int32 schedule_map_range_;
  double init_time_sec_;
  mutable int _cached_size_;
  friend struct ::protobuf_schedule_2eproto::TableStruct;
  friend void ::protobuf_schedule_2eproto::InitDefaultsScheduleInitResponseImpl();
};
// -------------------------------------------------------------------

class ScheduleStepRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ScheduleStepRequest) */ {
 public:
  ScheduleStepRequest();
  virtual ~ScheduleStepRequest();

  ScheduleStepRequest(const ScheduleStepRequest& from);

  inline ScheduleStepRequest& operator=(const ScheduleStepRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScheduleStepRequest(ScheduleStepRequest&& from) noexcept
    : ScheduleStepRequest() {
    *this = ::std::move(from);
  }

  inline ScheduleStepRequest& operator=(ScheduleStepRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScheduleStepRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScheduleStepRequest* internal_default_instance() {
    return reinterpret_cast<const ScheduleStepRequest*>(
               &_ScheduleStepRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ScheduleStepRequest* other);
  friend void swap(ScheduleStepRequest& a, ScheduleStepRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScheduleStepRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ScheduleStepRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScheduleStepRequest& from);
  void MergeFrom(const ScheduleStepRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScheduleStepRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .OperationRequest op = 1;
  bool has_op() const;
  void clear_op();
  static const int kOpFieldNumber = 1;
  const ::OperationRequest& op() const;
  ::OperationRequest* release_op();
  ::OperationRequest* mutable_op();
  void set_allocated_op(::OperationRequest* op);

  // @@protoc_insertion_point(class_scope:ScheduleStepRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::OperationRequest* op_;
  mutable int _cached_size_;
  friend struct ::protobuf_schedule_2eproto::TableStruct;
  friend void ::protobuf_schedule_2eproto::InitDefaultsScheduleStepRequestImpl();
};
// -------------------------------------------------------------------

class ScheduleStepResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ScheduleStepResponse) */ {
 public:
  ScheduleStepResponse();
  virtual ~ScheduleStepResponse();

  ScheduleStepResponse(const ScheduleStepResponse& from);

  inline ScheduleStepResponse& operator=(const ScheduleStepResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScheduleStepResponse(ScheduleStepResponse&& from) noexcept
    : ScheduleStepResponse() {
    *this = ::std::move(from);
  }

  inline ScheduleStepResponse& operator=(ScheduleStepResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScheduleStepResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScheduleStepResponse* internal_default_instance() {
    return reinterpret_cast<const ScheduleStepResponse*>(
               &_ScheduleStepResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ScheduleStepResponse* other);
  friend void swap(ScheduleStepResponse& a, ScheduleStepResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScheduleStepResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ScheduleStepResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScheduleStepResponse& from);
  void MergeFrom(const ScheduleStepResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScheduleStepResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .OperationResponse op = 3;
  bool has_op() const;
  void clear_op();
  static const int kOpFieldNumber = 3;
  const ::OperationResponse& op() const;
  ::OperationResponse* release_op();
  ::OperationResponse* mutable_op();
  void set_allocated_op(::OperationResponse* op);

  // double exec_time_sec = 4;
  void clear_exec_time_sec();
  static const int kExecTimeSecFieldNumber = 4;
  double exec_time_sec() const;
  void set_exec_time_sec(double value);

  // bool exec_error = 1;
  void clear_exec_error();
  static const int kExecErrorFieldNumber = 1;
  bool exec_error() const;
  void set_exec_error(bool value);

  // bool exec_timeout = 2;
  void clear_exec_timeout();
  static const int kExecTimeoutFieldNumber = 2;
  bool exec_timeout() const;
  void set_exec_timeout(bool value);

  // @@protoc_insertion_point(class_scope:ScheduleStepResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::OperationResponse* op_;
  double exec_time_sec_;
  bool exec_error_;
  bool exec_timeout_;
  mutable int _cached_size_;
  friend struct ::protobuf_schedule_2eproto::TableStruct;
  friend void ::protobuf_schedule_2eproto::InitDefaultsScheduleStepResponseImpl();
};
// -------------------------------------------------------------------

class ScheduleResetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ScheduleResetRequest) */ {
 public:
  ScheduleResetRequest();
  virtual ~ScheduleResetRequest();

  ScheduleResetRequest(const ScheduleResetRequest& from);

  inline ScheduleResetRequest& operator=(const ScheduleResetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScheduleResetRequest(ScheduleResetRequest&& from) noexcept
    : ScheduleResetRequest() {
    *this = ::std::move(from);
  }

  inline ScheduleResetRequest& operator=(ScheduleResetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScheduleResetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScheduleResetRequest* internal_default_instance() {
    return reinterpret_cast<const ScheduleResetRequest*>(
               &_ScheduleResetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ScheduleResetRequest* other);
  friend void swap(ScheduleResetRequest& a, ScheduleResetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScheduleResetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ScheduleResetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScheduleResetRequest& from);
  void MergeFrom(const ScheduleResetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScheduleResetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .OperationRequest op = 1;
  int op_size() const;
  void clear_op();
  static const int kOpFieldNumber = 1;
  const ::OperationRequest& op(int index) const;
  ::OperationRequest* mutable_op(int index);
  ::OperationRequest* add_op();
  ::google::protobuf::RepeatedPtrField< ::OperationRequest >*
      mutable_op();
  const ::google::protobuf::RepeatedPtrField< ::OperationRequest >&
      op() const;

  // @@protoc_insertion_point(class_scope:ScheduleResetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::OperationRequest > op_;
  mutable int _cached_size_;
  friend struct ::protobuf_schedule_2eproto::TableStruct;
  friend void ::protobuf_schedule_2eproto::InitDefaultsScheduleResetRequestImpl();
};
// -------------------------------------------------------------------

class ScheduleResetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ScheduleResetResponse) */ {
 public:
  ScheduleResetResponse();
  virtual ~ScheduleResetResponse();

  ScheduleResetResponse(const ScheduleResetResponse& from);

  inline ScheduleResetResponse& operator=(const ScheduleResetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScheduleResetResponse(ScheduleResetResponse&& from) noexcept
    : ScheduleResetResponse() {
    *this = ::std::move(from);
  }

  inline ScheduleResetResponse& operator=(ScheduleResetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScheduleResetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScheduleResetResponse* internal_default_instance() {
    return reinterpret_cast<const ScheduleResetResponse*>(
               &_ScheduleResetResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ScheduleResetResponse* other);
  friend void swap(ScheduleResetResponse& a, ScheduleResetResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScheduleResetResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ScheduleResetResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScheduleResetResponse& from);
  void MergeFrom(const ScheduleResetResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScheduleResetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .OperationResponse op = 1;
  int op_size() const;
  void clear_op();
  static const int kOpFieldNumber = 1;
  const ::OperationResponse& op(int index) const;
  ::OperationResponse* mutable_op(int index);
  ::OperationResponse* add_op();
  ::google::protobuf::RepeatedPtrField< ::OperationResponse >*
      mutable_op();
  const ::google::protobuf::RepeatedPtrField< ::OperationResponse >&
      op() const;

  // @@protoc_insertion_point(class_scope:ScheduleResetResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::OperationResponse > op_;
  mutable int _cached_size_;
  friend struct ::protobuf_schedule_2eproto::TableStruct;
  friend void ::protobuf_schedule_2eproto::InitDefaultsScheduleResetResponseImpl();
};
// -------------------------------------------------------------------

class ScheduleRenderRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ScheduleRenderRequest) */ {
 public:
  ScheduleRenderRequest();
  virtual ~ScheduleRenderRequest();

  ScheduleRenderRequest(const ScheduleRenderRequest& from);

  inline ScheduleRenderRequest& operator=(const ScheduleRenderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScheduleRenderRequest(ScheduleRenderRequest&& from) noexcept
    : ScheduleRenderRequest() {
    *this = ::std::move(from);
  }

  inline ScheduleRenderRequest& operator=(ScheduleRenderRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScheduleRenderRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScheduleRenderRequest* internal_default_instance() {
    return reinterpret_cast<const ScheduleRenderRequest*>(
               &_ScheduleRenderRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ScheduleRenderRequest* other);
  friend void swap(ScheduleRenderRequest& a, ScheduleRenderRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScheduleRenderRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ScheduleRenderRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScheduleRenderRequest& from);
  void MergeFrom(const ScheduleRenderRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScheduleRenderRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ScheduleRenderRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_schedule_2eproto::TableStruct;
  friend void ::protobuf_schedule_2eproto::InitDefaultsScheduleRenderRequestImpl();
};
// -------------------------------------------------------------------

class ScheduleRenderResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ScheduleRenderResponse) */ {
 public:
  ScheduleRenderResponse();
  virtual ~ScheduleRenderResponse();

  ScheduleRenderResponse(const ScheduleRenderResponse& from);

  inline ScheduleRenderResponse& operator=(const ScheduleRenderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScheduleRenderResponse(ScheduleRenderResponse&& from) noexcept
    : ScheduleRenderResponse() {
    *this = ::std::move(from);
  }

  inline ScheduleRenderResponse& operator=(ScheduleRenderResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScheduleRenderResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScheduleRenderResponse* internal_default_instance() {
    return reinterpret_cast<const ScheduleRenderResponse*>(
               &_ScheduleRenderResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ScheduleRenderResponse* other);
  friend void swap(ScheduleRenderResponse& a, ScheduleRenderResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScheduleRenderResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ScheduleRenderResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScheduleRenderResponse& from);
  void MergeFrom(const ScheduleRenderResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScheduleRenderResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string schedule_str = 1;
  int schedule_str_size() const;
  void clear_schedule_str();
  static const int kScheduleStrFieldNumber = 1;
  const ::std::string& schedule_str(int index) const;
  ::std::string* mutable_schedule_str(int index);
  void set_schedule_str(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_schedule_str(int index, ::std::string&& value);
  #endif
  void set_schedule_str(int index, const char* value);
  void set_schedule_str(int index, const char* value, size_t size);
  ::std::string* add_schedule_str();
  void add_schedule_str(const ::std::string& value);
  #if LANG_CXX11
  void add_schedule_str(::std::string&& value);
  #endif
  void add_schedule_str(const char* value);
  void add_schedule_str(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& schedule_str() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_schedule_str();

  // @@protoc_insertion_point(class_scope:ScheduleRenderResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> schedule_str_;
  mutable int _cached_size_;
  friend struct ::protobuf_schedule_2eproto::TableStruct;
  friend void ::protobuf_schedule_2eproto::InitDefaultsScheduleRenderResponseImpl();
};
// -------------------------------------------------------------------

class ScheduleCloseRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ScheduleCloseRequest) */ {
 public:
  ScheduleCloseRequest();
  virtual ~ScheduleCloseRequest();

  ScheduleCloseRequest(const ScheduleCloseRequest& from);

  inline ScheduleCloseRequest& operator=(const ScheduleCloseRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScheduleCloseRequest(ScheduleCloseRequest&& from) noexcept
    : ScheduleCloseRequest() {
    *this = ::std::move(from);
  }

  inline ScheduleCloseRequest& operator=(ScheduleCloseRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScheduleCloseRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScheduleCloseRequest* internal_default_instance() {
    return reinterpret_cast<const ScheduleCloseRequest*>(
               &_ScheduleCloseRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ScheduleCloseRequest* other);
  friend void swap(ScheduleCloseRequest& a, ScheduleCloseRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScheduleCloseRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ScheduleCloseRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScheduleCloseRequest& from);
  void MergeFrom(const ScheduleCloseRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScheduleCloseRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ScheduleCloseRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_schedule_2eproto::TableStruct;
  friend void ::protobuf_schedule_2eproto::InitDefaultsScheduleCloseRequestImpl();
};
// -------------------------------------------------------------------

class ScheduleCloseResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ScheduleCloseResponse) */ {
 public:
  ScheduleCloseResponse();
  virtual ~ScheduleCloseResponse();

  ScheduleCloseResponse(const ScheduleCloseResponse& from);

  inline ScheduleCloseResponse& operator=(const ScheduleCloseResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScheduleCloseResponse(ScheduleCloseResponse&& from) noexcept
    : ScheduleCloseResponse() {
    *this = ::std::move(from);
  }

  inline ScheduleCloseResponse& operator=(ScheduleCloseResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScheduleCloseResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScheduleCloseResponse* internal_default_instance() {
    return reinterpret_cast<const ScheduleCloseResponse*>(
               &_ScheduleCloseResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ScheduleCloseResponse* other);
  friend void swap(ScheduleCloseResponse& a, ScheduleCloseResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScheduleCloseResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ScheduleCloseResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScheduleCloseResponse& from);
  void MergeFrom(const ScheduleCloseResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScheduleCloseResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ScheduleCloseResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_schedule_2eproto::TableStruct;
  friend void ::protobuf_schedule_2eproto::InitDefaultsScheduleCloseResponseImpl();
};
// -------------------------------------------------------------------

class OperationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OperationRequest) */ {
 public:
  OperationRequest();
  virtual ~OperationRequest();

  OperationRequest(const OperationRequest& from);

  inline OperationRequest& operator=(const OperationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OperationRequest(OperationRequest&& from) noexcept
    : OperationRequest() {
    *this = ::std::move(from);
  }

  inline OperationRequest& operator=(OperationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OperationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OperationRequest* internal_default_instance() {
    return reinterpret_cast<const OperationRequest*>(
               &_OperationRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(OperationRequest* other);
  friend void swap(OperationRequest& a, OperationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OperationRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  OperationRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OperationRequest& from);
  void MergeFrom(const OperationRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OperationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 map_code = 1;
  void clear_map_code();
  static const int kMapCodeFieldNumber = 1;
  ::google::protobuf::int32 map_code() const;
  void set_map_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OperationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 map_code_;
  mutable int _cached_size_;
  friend struct ::protobuf_schedule_2eproto::TableStruct;
  friend void ::protobuf_schedule_2eproto::InitDefaultsOperationRequestImpl();
};
// -------------------------------------------------------------------

class OperationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OperationResponse) */ {
 public:
  OperationResponse();
  virtual ~OperationResponse();

  OperationResponse(const OperationResponse& from);

  inline OperationResponse& operator=(const OperationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OperationResponse(OperationResponse&& from) noexcept
    : OperationResponse() {
    *this = ::std::move(from);
  }

  inline OperationResponse& operator=(OperationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OperationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OperationResponse* internal_default_instance() {
    return reinterpret_cast<const OperationResponse*>(
               &_OperationResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(OperationResponse* other);
  friend void swap(OperationResponse& a, OperationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OperationResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  OperationResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OperationResponse& from);
  void MergeFrom(const OperationResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OperationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 elem_id = 1;
  int elem_id_size() const;
  void clear_elem_id();
  static const int kElemIdFieldNumber = 1;
  ::google::protobuf::int32 elem_id(int index) const;
  void set_elem_id(int index, ::google::protobuf::int32 value);
  void add_elem_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      elem_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_elem_id();

  // @@protoc_insertion_point(class_scope:OperationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > elem_id_;
  mutable int _elem_id_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_schedule_2eproto::TableStruct;
  friend void ::protobuf_schedule_2eproto::InitDefaultsOperationResponseImpl();
};
// -------------------------------------------------------------------

class TvmRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TvmRequest) */ {
 public:
  TvmRequest();
  virtual ~TvmRequest();

  TvmRequest(const TvmRequest& from);

  inline TvmRequest& operator=(const TvmRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TvmRequest(TvmRequest&& from) noexcept
    : TvmRequest() {
    *this = ::std::move(from);
  }

  inline TvmRequest& operator=(TvmRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TvmRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TvmRequest* internal_default_instance() {
    return reinterpret_cast<const TvmRequest*>(
               &_TvmRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(TvmRequest* other);
  friend void swap(TvmRequest& a, TvmRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TvmRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  TvmRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TvmRequest& from);
  void MergeFrom(const TvmRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TvmRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 action = 1;
  void clear_action();
  static const int kActionFieldNumber = 1;
  ::google::protobuf::int32 action() const;
  void set_action(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TvmRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 action_;
  mutable int _cached_size_;
  friend struct ::protobuf_schedule_2eproto::TableStruct;
  friend void ::protobuf_schedule_2eproto::InitDefaultsTvmRequestImpl();
};
// -------------------------------------------------------------------

class TvmResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TvmResponse) */ {
 public:
  TvmResponse();
  virtual ~TvmResponse();

  TvmResponse(const TvmResponse& from);

  inline TvmResponse& operator=(const TvmResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TvmResponse(TvmResponse&& from) noexcept
    : TvmResponse() {
    *this = ::std::move(from);
  }

  inline TvmResponse& operator=(TvmResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TvmResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TvmResponse* internal_default_instance() {
    return reinterpret_cast<const TvmResponse*>(
               &_TvmResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(TvmResponse* other);
  friend void swap(TvmResponse& a, TvmResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TvmResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  TvmResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TvmResponse& from);
  void MergeFrom(const TvmResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TvmResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string state = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  #if LANG_CXX11
  void set_state(::std::string&& value);
  #endif
  void set_state(const char* value);
  void set_state(const char* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // double reward = 2;
  void clear_reward();
  static const int kRewardFieldNumber = 2;
  double reward() const;
  void set_reward(double value);

  // int32 maxLen = 3;
  void clear_maxlen();
  static const int kMaxLenFieldNumber = 3;
  ::google::protobuf::int32 maxlen() const;
  void set_maxlen(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TvmResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  double reward_;
  ::google::protobuf::int32 maxlen_;
  mutable int _cached_size_;
  friend struct ::protobuf_schedule_2eproto::TableStruct;
  friend void ::protobuf_schedule_2eproto::InitDefaultsTvmResponseImpl();
};
// -------------------------------------------------------------------

class MsgStokeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MsgStokeRequest) */ {
 public:
  MsgStokeRequest();
  virtual ~MsgStokeRequest();

  MsgStokeRequest(const MsgStokeRequest& from);

  inline MsgStokeRequest& operator=(const MsgStokeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgStokeRequest(MsgStokeRequest&& from) noexcept
    : MsgStokeRequest() {
    *this = ::std::move(from);
  }

  inline MsgStokeRequest& operator=(MsgStokeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgStokeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgStokeRequest* internal_default_instance() {
    return reinterpret_cast<const MsgStokeRequest*>(
               &_MsgStokeRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(MsgStokeRequest* other);
  friend void swap(MsgStokeRequest& a, MsgStokeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgStokeRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgStokeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgStokeRequest& from);
  void MergeFrom(const MsgStokeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgStokeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // double cost = 2;
  void clear_cost();
  static const int kCostFieldNumber = 2;
  double cost() const;
  void set_cost(double value);

  // @@protoc_insertion_point(class_scope:MsgStokeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  double cost_;
  mutable int _cached_size_;
  friend struct ::protobuf_schedule_2eproto::TableStruct;
  friend void ::protobuf_schedule_2eproto::InitDefaultsMsgStokeRequestImpl();
};
// -------------------------------------------------------------------

class MsgStokeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MsgStokeResponse) */ {
 public:
  MsgStokeResponse();
  virtual ~MsgStokeResponse();

  MsgStokeResponse(const MsgStokeResponse& from);

  inline MsgStokeResponse& operator=(const MsgStokeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgStokeResponse(MsgStokeResponse&& from) noexcept
    : MsgStokeResponse() {
    *this = ::std::move(from);
  }

  inline MsgStokeResponse& operator=(MsgStokeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgStokeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgStokeResponse* internal_default_instance() {
    return reinterpret_cast<const MsgStokeResponse*>(
               &_MsgStokeResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(MsgStokeResponse* other);
  friend void swap(MsgStokeResponse& a, MsgStokeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgStokeResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgStokeResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgStokeResponse& from);
  void MergeFrom(const MsgStokeResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgStokeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 action = 1;
  void clear_action();
  static const int kActionFieldNumber = 1;
  ::google::protobuf::int32 action() const;
  void set_action(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgStokeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 action_;
  mutable int _cached_size_;
  friend struct ::protobuf_schedule_2eproto::TableStruct;
  friend void ::protobuf_schedule_2eproto::InitDefaultsMsgStokeResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ScheduleInitRequest

// int32 algorithm_id = 1;
inline void ScheduleInitRequest::clear_algorithm_id() {
  algorithm_id_ = 0;
}
inline ::google::protobuf::int32 ScheduleInitRequest::algorithm_id() const {
  // @@protoc_insertion_point(field_get:ScheduleInitRequest.algorithm_id)
  return algorithm_id_;
}
inline void ScheduleInitRequest::set_algorithm_id(::google::protobuf::int32 value) {
  
  algorithm_id_ = value;
  // @@protoc_insertion_point(field_set:ScheduleInitRequest.algorithm_id)
}

// string input_image = 2;
inline void ScheduleInitRequest::clear_input_image() {
  input_image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScheduleInitRequest::input_image() const {
  // @@protoc_insertion_point(field_get:ScheduleInitRequest.input_image)
  return input_image_.GetNoArena();
}
inline void ScheduleInitRequest::set_input_image(const ::std::string& value) {
  
  input_image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ScheduleInitRequest.input_image)
}
#if LANG_CXX11
inline void ScheduleInitRequest::set_input_image(::std::string&& value) {
  
  input_image_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ScheduleInitRequest.input_image)
}
#endif
inline void ScheduleInitRequest::set_input_image(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ScheduleInitRequest.input_image)
}
inline void ScheduleInitRequest::set_input_image(const char* value, size_t size) {
  
  input_image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ScheduleInitRequest.input_image)
}
inline ::std::string* ScheduleInitRequest::mutable_input_image() {
  
  // @@protoc_insertion_point(field_mutable:ScheduleInitRequest.input_image)
  return input_image_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScheduleInitRequest::release_input_image() {
  // @@protoc_insertion_point(field_release:ScheduleInitRequest.input_image)
  
  return input_image_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScheduleInitRequest::set_allocated_input_image(::std::string* input_image) {
  if (input_image != NULL) {
    
  } else {
    
  }
  input_image_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_image);
  // @@protoc_insertion_point(field_set_allocated:ScheduleInitRequest.input_image)
}

// int32 max_stage_directive = 3;
inline void ScheduleInitRequest::clear_max_stage_directive() {
  max_stage_directive_ = 0;
}
inline ::google::protobuf::int32 ScheduleInitRequest::max_stage_directive() const {
  // @@protoc_insertion_point(field_get:ScheduleInitRequest.max_stage_directive)
  return max_stage_directive_;
}
inline void ScheduleInitRequest::set_max_stage_directive(::google::protobuf::int32 value) {
  
  max_stage_directive_ = value;
  // @@protoc_insertion_point(field_set:ScheduleInitRequest.max_stage_directive)
}

// -------------------------------------------------------------------

// ScheduleInitResponse

// int32 max_stage = 1;
inline void ScheduleInitResponse::clear_max_stage() {
  max_stage_ = 0;
}
inline ::google::protobuf::int32 ScheduleInitResponse::max_stage() const {
  // @@protoc_insertion_point(field_get:ScheduleInitResponse.max_stage)
  return max_stage_;
}
inline void ScheduleInitResponse::set_max_stage(::google::protobuf::int32 value) {
  
  max_stage_ = value;
  // @@protoc_insertion_point(field_set:ScheduleInitResponse.max_stage)
}

// int32 max_directive = 2;
inline void ScheduleInitResponse::clear_max_directive() {
  max_directive_ = 0;
}
inline ::google::protobuf::int32 ScheduleInitResponse::max_directive() const {
  // @@protoc_insertion_point(field_get:ScheduleInitResponse.max_directive)
  return max_directive_;
}
inline void ScheduleInitResponse::set_max_directive(::google::protobuf::int32 value) {
  
  max_directive_ = value;
  // @@protoc_insertion_point(field_set:ScheduleInitResponse.max_directive)
}

// int32 max_param = 3;
inline void ScheduleInitResponse::clear_max_param() {
  max_param_ = 0;
}
inline ::google::protobuf::int32 ScheduleInitResponse::max_param() const {
  // @@protoc_insertion_point(field_get:ScheduleInitResponse.max_param)
  return max_param_;
}
inline void ScheduleInitResponse::set_max_param(::google::protobuf::int32 value) {
  
  max_param_ = value;
  // @@protoc_insertion_point(field_set:ScheduleInitResponse.max_param)
}

// int32 schedule_map_range = 4;
inline void ScheduleInitResponse::clear_schedule_map_range() {
  schedule_map_range_ = 0;
}
inline ::google::protobuf::int32 ScheduleInitResponse::schedule_map_range() const {
  // @@protoc_insertion_point(field_get:ScheduleInitResponse.schedule_map_range)
  return schedule_map_range_;
}
inline void ScheduleInitResponse::set_schedule_map_range(::google::protobuf::int32 value) {
  
  schedule_map_range_ = value;
  // @@protoc_insertion_point(field_set:ScheduleInitResponse.schedule_map_range)
}

// double init_time_sec = 5;
inline void ScheduleInitResponse::clear_init_time_sec() {
  init_time_sec_ = 0;
}
inline double ScheduleInitResponse::init_time_sec() const {
  // @@protoc_insertion_point(field_get:ScheduleInitResponse.init_time_sec)
  return init_time_sec_;
}
inline void ScheduleInitResponse::set_init_time_sec(double value) {
  
  init_time_sec_ = value;
  // @@protoc_insertion_point(field_set:ScheduleInitResponse.init_time_sec)
}

// -------------------------------------------------------------------

// ScheduleStepRequest

// .OperationRequest op = 1;
inline bool ScheduleStepRequest::has_op() const {
  return this != internal_default_instance() && op_ != NULL;
}
inline void ScheduleStepRequest::clear_op() {
  if (GetArenaNoVirtual() == NULL && op_ != NULL) {
    delete op_;
  }
  op_ = NULL;
}
inline const ::OperationRequest& ScheduleStepRequest::op() const {
  const ::OperationRequest* p = op_;
  // @@protoc_insertion_point(field_get:ScheduleStepRequest.op)
  return p != NULL ? *p : *reinterpret_cast<const ::OperationRequest*>(
      &::_OperationRequest_default_instance_);
}
inline ::OperationRequest* ScheduleStepRequest::release_op() {
  // @@protoc_insertion_point(field_release:ScheduleStepRequest.op)
  
  ::OperationRequest* temp = op_;
  op_ = NULL;
  return temp;
}
inline ::OperationRequest* ScheduleStepRequest::mutable_op() {
  
  if (op_ == NULL) {
    op_ = new ::OperationRequest;
  }
  // @@protoc_insertion_point(field_mutable:ScheduleStepRequest.op)
  return op_;
}
inline void ScheduleStepRequest::set_allocated_op(::OperationRequest* op) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete op_;
  }
  if (op) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      op = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, op, submessage_arena);
    }
    
  } else {
    
  }
  op_ = op;
  // @@protoc_insertion_point(field_set_allocated:ScheduleStepRequest.op)
}

// -------------------------------------------------------------------

// ScheduleStepResponse

// bool exec_error = 1;
inline void ScheduleStepResponse::clear_exec_error() {
  exec_error_ = false;
}
inline bool ScheduleStepResponse::exec_error() const {
  // @@protoc_insertion_point(field_get:ScheduleStepResponse.exec_error)
  return exec_error_;
}
inline void ScheduleStepResponse::set_exec_error(bool value) {
  
  exec_error_ = value;
  // @@protoc_insertion_point(field_set:ScheduleStepResponse.exec_error)
}

// bool exec_timeout = 2;
inline void ScheduleStepResponse::clear_exec_timeout() {
  exec_timeout_ = false;
}
inline bool ScheduleStepResponse::exec_timeout() const {
  // @@protoc_insertion_point(field_get:ScheduleStepResponse.exec_timeout)
  return exec_timeout_;
}
inline void ScheduleStepResponse::set_exec_timeout(bool value) {
  
  exec_timeout_ = value;
  // @@protoc_insertion_point(field_set:ScheduleStepResponse.exec_timeout)
}

// .OperationResponse op = 3;
inline bool ScheduleStepResponse::has_op() const {
  return this != internal_default_instance() && op_ != NULL;
}
inline void ScheduleStepResponse::clear_op() {
  if (GetArenaNoVirtual() == NULL && op_ != NULL) {
    delete op_;
  }
  op_ = NULL;
}
inline const ::OperationResponse& ScheduleStepResponse::op() const {
  const ::OperationResponse* p = op_;
  // @@protoc_insertion_point(field_get:ScheduleStepResponse.op)
  return p != NULL ? *p : *reinterpret_cast<const ::OperationResponse*>(
      &::_OperationResponse_default_instance_);
}
inline ::OperationResponse* ScheduleStepResponse::release_op() {
  // @@protoc_insertion_point(field_release:ScheduleStepResponse.op)
  
  ::OperationResponse* temp = op_;
  op_ = NULL;
  return temp;
}
inline ::OperationResponse* ScheduleStepResponse::mutable_op() {
  
  if (op_ == NULL) {
    op_ = new ::OperationResponse;
  }
  // @@protoc_insertion_point(field_mutable:ScheduleStepResponse.op)
  return op_;
}
inline void ScheduleStepResponse::set_allocated_op(::OperationResponse* op) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete op_;
  }
  if (op) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      op = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, op, submessage_arena);
    }
    
  } else {
    
  }
  op_ = op;
  // @@protoc_insertion_point(field_set_allocated:ScheduleStepResponse.op)
}

// double exec_time_sec = 4;
inline void ScheduleStepResponse::clear_exec_time_sec() {
  exec_time_sec_ = 0;
}
inline double ScheduleStepResponse::exec_time_sec() const {
  // @@protoc_insertion_point(field_get:ScheduleStepResponse.exec_time_sec)
  return exec_time_sec_;
}
inline void ScheduleStepResponse::set_exec_time_sec(double value) {
  
  exec_time_sec_ = value;
  // @@protoc_insertion_point(field_set:ScheduleStepResponse.exec_time_sec)
}

// -------------------------------------------------------------------

// ScheduleResetRequest

// repeated .OperationRequest op = 1;
inline int ScheduleResetRequest::op_size() const {
  return op_.size();
}
inline void ScheduleResetRequest::clear_op() {
  op_.Clear();
}
inline const ::OperationRequest& ScheduleResetRequest::op(int index) const {
  // @@protoc_insertion_point(field_get:ScheduleResetRequest.op)
  return op_.Get(index);
}
inline ::OperationRequest* ScheduleResetRequest::mutable_op(int index) {
  // @@protoc_insertion_point(field_mutable:ScheduleResetRequest.op)
  return op_.Mutable(index);
}
inline ::OperationRequest* ScheduleResetRequest::add_op() {
  // @@protoc_insertion_point(field_add:ScheduleResetRequest.op)
  return op_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::OperationRequest >*
ScheduleResetRequest::mutable_op() {
  // @@protoc_insertion_point(field_mutable_list:ScheduleResetRequest.op)
  return &op_;
}
inline const ::google::protobuf::RepeatedPtrField< ::OperationRequest >&
ScheduleResetRequest::op() const {
  // @@protoc_insertion_point(field_list:ScheduleResetRequest.op)
  return op_;
}

// -------------------------------------------------------------------

// ScheduleResetResponse

// repeated .OperationResponse op = 1;
inline int ScheduleResetResponse::op_size() const {
  return op_.size();
}
inline void ScheduleResetResponse::clear_op() {
  op_.Clear();
}
inline const ::OperationResponse& ScheduleResetResponse::op(int index) const {
  // @@protoc_insertion_point(field_get:ScheduleResetResponse.op)
  return op_.Get(index);
}
inline ::OperationResponse* ScheduleResetResponse::mutable_op(int index) {
  // @@protoc_insertion_point(field_mutable:ScheduleResetResponse.op)
  return op_.Mutable(index);
}
inline ::OperationResponse* ScheduleResetResponse::add_op() {
  // @@protoc_insertion_point(field_add:ScheduleResetResponse.op)
  return op_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::OperationResponse >*
ScheduleResetResponse::mutable_op() {
  // @@protoc_insertion_point(field_mutable_list:ScheduleResetResponse.op)
  return &op_;
}
inline const ::google::protobuf::RepeatedPtrField< ::OperationResponse >&
ScheduleResetResponse::op() const {
  // @@protoc_insertion_point(field_list:ScheduleResetResponse.op)
  return op_;
}

// -------------------------------------------------------------------

// ScheduleRenderRequest

// -------------------------------------------------------------------

// ScheduleRenderResponse

// repeated string schedule_str = 1;
inline int ScheduleRenderResponse::schedule_str_size() const {
  return schedule_str_.size();
}
inline void ScheduleRenderResponse::clear_schedule_str() {
  schedule_str_.Clear();
}
inline const ::std::string& ScheduleRenderResponse::schedule_str(int index) const {
  // @@protoc_insertion_point(field_get:ScheduleRenderResponse.schedule_str)
  return schedule_str_.Get(index);
}
inline ::std::string* ScheduleRenderResponse::mutable_schedule_str(int index) {
  // @@protoc_insertion_point(field_mutable:ScheduleRenderResponse.schedule_str)
  return schedule_str_.Mutable(index);
}
inline void ScheduleRenderResponse::set_schedule_str(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ScheduleRenderResponse.schedule_str)
  schedule_str_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ScheduleRenderResponse::set_schedule_str(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ScheduleRenderResponse.schedule_str)
  schedule_str_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ScheduleRenderResponse::set_schedule_str(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  schedule_str_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ScheduleRenderResponse.schedule_str)
}
inline void ScheduleRenderResponse::set_schedule_str(int index, const char* value, size_t size) {
  schedule_str_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ScheduleRenderResponse.schedule_str)
}
inline ::std::string* ScheduleRenderResponse::add_schedule_str() {
  // @@protoc_insertion_point(field_add_mutable:ScheduleRenderResponse.schedule_str)
  return schedule_str_.Add();
}
inline void ScheduleRenderResponse::add_schedule_str(const ::std::string& value) {
  schedule_str_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ScheduleRenderResponse.schedule_str)
}
#if LANG_CXX11
inline void ScheduleRenderResponse::add_schedule_str(::std::string&& value) {
  schedule_str_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ScheduleRenderResponse.schedule_str)
}
#endif
inline void ScheduleRenderResponse::add_schedule_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  schedule_str_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ScheduleRenderResponse.schedule_str)
}
inline void ScheduleRenderResponse::add_schedule_str(const char* value, size_t size) {
  schedule_str_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ScheduleRenderResponse.schedule_str)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ScheduleRenderResponse::schedule_str() const {
  // @@protoc_insertion_point(field_list:ScheduleRenderResponse.schedule_str)
  return schedule_str_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ScheduleRenderResponse::mutable_schedule_str() {
  // @@protoc_insertion_point(field_mutable_list:ScheduleRenderResponse.schedule_str)
  return &schedule_str_;
}

// -------------------------------------------------------------------

// ScheduleCloseRequest

// -------------------------------------------------------------------

// ScheduleCloseResponse

// -------------------------------------------------------------------

// OperationRequest

// int32 map_code = 1;
inline void OperationRequest::clear_map_code() {
  map_code_ = 0;
}
inline ::google::protobuf::int32 OperationRequest::map_code() const {
  // @@protoc_insertion_point(field_get:OperationRequest.map_code)
  return map_code_;
}
inline void OperationRequest::set_map_code(::google::protobuf::int32 value) {
  
  map_code_ = value;
  // @@protoc_insertion_point(field_set:OperationRequest.map_code)
}

// -------------------------------------------------------------------

// OperationResponse

// repeated int32 elem_id = 1;
inline int OperationResponse::elem_id_size() const {
  return elem_id_.size();
}
inline void OperationResponse::clear_elem_id() {
  elem_id_.Clear();
}
inline ::google::protobuf::int32 OperationResponse::elem_id(int index) const {
  // @@protoc_insertion_point(field_get:OperationResponse.elem_id)
  return elem_id_.Get(index);
}
inline void OperationResponse::set_elem_id(int index, ::google::protobuf::int32 value) {
  elem_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:OperationResponse.elem_id)
}
inline void OperationResponse::add_elem_id(::google::protobuf::int32 value) {
  elem_id_.Add(value);
  // @@protoc_insertion_point(field_add:OperationResponse.elem_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
OperationResponse::elem_id() const {
  // @@protoc_insertion_point(field_list:OperationResponse.elem_id)
  return elem_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
OperationResponse::mutable_elem_id() {
  // @@protoc_insertion_point(field_mutable_list:OperationResponse.elem_id)
  return &elem_id_;
}

// -------------------------------------------------------------------

// TvmRequest

// int32 action = 1;
inline void TvmRequest::clear_action() {
  action_ = 0;
}
inline ::google::protobuf::int32 TvmRequest::action() const {
  // @@protoc_insertion_point(field_get:TvmRequest.action)
  return action_;
}
inline void TvmRequest::set_action(::google::protobuf::int32 value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:TvmRequest.action)
}

// -------------------------------------------------------------------

// TvmResponse

// string state = 1;
inline void TvmResponse::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TvmResponse::state() const {
  // @@protoc_insertion_point(field_get:TvmResponse.state)
  return state_.GetNoArena();
}
inline void TvmResponse::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TvmResponse.state)
}
#if LANG_CXX11
inline void TvmResponse::set_state(::std::string&& value) {
  
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TvmResponse.state)
}
#endif
inline void TvmResponse::set_state(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TvmResponse.state)
}
inline void TvmResponse::set_state(const char* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TvmResponse.state)
}
inline ::std::string* TvmResponse::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:TvmResponse.state)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TvmResponse::release_state() {
  // @@protoc_insertion_point(field_release:TvmResponse.state)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TvmResponse::set_allocated_state(::std::string* state) {
  if (state != NULL) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:TvmResponse.state)
}

// double reward = 2;
inline void TvmResponse::clear_reward() {
  reward_ = 0;
}
inline double TvmResponse::reward() const {
  // @@protoc_insertion_point(field_get:TvmResponse.reward)
  return reward_;
}
inline void TvmResponse::set_reward(double value) {
  
  reward_ = value;
  // @@protoc_insertion_point(field_set:TvmResponse.reward)
}

// int32 maxLen = 3;
inline void TvmResponse::clear_maxlen() {
  maxlen_ = 0;
}
inline ::google::protobuf::int32 TvmResponse::maxlen() const {
  // @@protoc_insertion_point(field_get:TvmResponse.maxLen)
  return maxlen_;
}
inline void TvmResponse::set_maxlen(::google::protobuf::int32 value) {
  
  maxlen_ = value;
  // @@protoc_insertion_point(field_set:TvmResponse.maxLen)
}

// -------------------------------------------------------------------

// MsgStokeRequest

// string code = 1;
inline void MsgStokeRequest::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgStokeRequest::code() const {
  // @@protoc_insertion_point(field_get:MsgStokeRequest.code)
  return code_.GetNoArena();
}
inline void MsgStokeRequest::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MsgStokeRequest.code)
}
#if LANG_CXX11
inline void MsgStokeRequest::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MsgStokeRequest.code)
}
#endif
inline void MsgStokeRequest::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MsgStokeRequest.code)
}
inline void MsgStokeRequest::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MsgStokeRequest.code)
}
inline ::std::string* MsgStokeRequest::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:MsgStokeRequest.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgStokeRequest::release_code() {
  // @@protoc_insertion_point(field_release:MsgStokeRequest.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgStokeRequest::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:MsgStokeRequest.code)
}

// double cost = 2;
inline void MsgStokeRequest::clear_cost() {
  cost_ = 0;
}
inline double MsgStokeRequest::cost() const {
  // @@protoc_insertion_point(field_get:MsgStokeRequest.cost)
  return cost_;
}
inline void MsgStokeRequest::set_cost(double value) {
  
  cost_ = value;
  // @@protoc_insertion_point(field_set:MsgStokeRequest.cost)
}

// -------------------------------------------------------------------

// MsgStokeResponse

// int32 action = 1;
inline void MsgStokeResponse::clear_action() {
  action_ = 0;
}
inline ::google::protobuf::int32 MsgStokeResponse::action() const {
  // @@protoc_insertion_point(field_get:MsgStokeResponse.action)
  return action_;
}
inline void MsgStokeResponse::set_action(::google::protobuf::int32 value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:MsgStokeResponse.action)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_schedule_2eproto__INCLUDED
