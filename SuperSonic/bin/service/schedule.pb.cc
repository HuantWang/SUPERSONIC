// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: schedule.proto

#include "schedule.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class ScheduleInitRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScheduleInitRequest>
      _instance;
} _ScheduleInitRequest_default_instance_;
class ScheduleInitResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScheduleInitResponse>
      _instance;
} _ScheduleInitResponse_default_instance_;
class ScheduleStepRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScheduleStepRequest>
      _instance;
} _ScheduleStepRequest_default_instance_;
class ScheduleStepResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScheduleStepResponse>
      _instance;
} _ScheduleStepResponse_default_instance_;
class ScheduleResetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScheduleResetRequest>
      _instance;
} _ScheduleResetRequest_default_instance_;
class ScheduleResetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScheduleResetResponse>
      _instance;
} _ScheduleResetResponse_default_instance_;
class ScheduleRenderRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScheduleRenderRequest>
      _instance;
} _ScheduleRenderRequest_default_instance_;
class ScheduleRenderResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScheduleRenderResponse>
      _instance;
} _ScheduleRenderResponse_default_instance_;
class ScheduleCloseRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScheduleCloseRequest>
      _instance;
} _ScheduleCloseRequest_default_instance_;
class ScheduleCloseResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScheduleCloseResponse>
      _instance;
} _ScheduleCloseResponse_default_instance_;
class OperationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperationRequest>
      _instance;
} _OperationRequest_default_instance_;
class OperationResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperationResponse>
      _instance;
} _OperationResponse_default_instance_;
class TvmRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TvmRequest>
      _instance;
} _TvmRequest_default_instance_;
class TvmResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TvmResponse>
      _instance;
} _TvmResponse_default_instance_;
class MsgStokeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgStokeRequest>
      _instance;
} _MsgStokeRequest_default_instance_;
class MsgStokeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgStokeResponse>
      _instance;
} _MsgStokeResponse_default_instance_;
namespace protobuf_schedule_2eproto {
void InitDefaultsScheduleInitRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ScheduleInitRequest_default_instance_;
    new (ptr) ::ScheduleInitRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ScheduleInitRequest::InitAsDefaultInstance();
}

void InitDefaultsScheduleInitRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsScheduleInitRequestImpl);
}

void InitDefaultsScheduleInitResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ScheduleInitResponse_default_instance_;
    new (ptr) ::ScheduleInitResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ScheduleInitResponse::InitAsDefaultInstance();
}

void InitDefaultsScheduleInitResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsScheduleInitResponseImpl);
}

void InitDefaultsScheduleStepRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_schedule_2eproto::InitDefaultsOperationRequest();
  {
    void* ptr = &::_ScheduleStepRequest_default_instance_;
    new (ptr) ::ScheduleStepRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ScheduleStepRequest::InitAsDefaultInstance();
}

void InitDefaultsScheduleStepRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsScheduleStepRequestImpl);
}

void InitDefaultsScheduleStepResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_schedule_2eproto::InitDefaultsOperationResponse();
  {
    void* ptr = &::_ScheduleStepResponse_default_instance_;
    new (ptr) ::ScheduleStepResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ScheduleStepResponse::InitAsDefaultInstance();
}

void InitDefaultsScheduleStepResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsScheduleStepResponseImpl);
}

void InitDefaultsScheduleResetRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_schedule_2eproto::InitDefaultsOperationRequest();
  {
    void* ptr = &::_ScheduleResetRequest_default_instance_;
    new (ptr) ::ScheduleResetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ScheduleResetRequest::InitAsDefaultInstance();
}

void InitDefaultsScheduleResetRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsScheduleResetRequestImpl);
}

void InitDefaultsScheduleResetResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_schedule_2eproto::InitDefaultsOperationResponse();
  {
    void* ptr = &::_ScheduleResetResponse_default_instance_;
    new (ptr) ::ScheduleResetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ScheduleResetResponse::InitAsDefaultInstance();
}

void InitDefaultsScheduleResetResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsScheduleResetResponseImpl);
}

void InitDefaultsScheduleRenderRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ScheduleRenderRequest_default_instance_;
    new (ptr) ::ScheduleRenderRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ScheduleRenderRequest::InitAsDefaultInstance();
}

void InitDefaultsScheduleRenderRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsScheduleRenderRequestImpl);
}

void InitDefaultsScheduleRenderResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ScheduleRenderResponse_default_instance_;
    new (ptr) ::ScheduleRenderResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ScheduleRenderResponse::InitAsDefaultInstance();
}

void InitDefaultsScheduleRenderResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsScheduleRenderResponseImpl);
}

void InitDefaultsScheduleCloseRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ScheduleCloseRequest_default_instance_;
    new (ptr) ::ScheduleCloseRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ScheduleCloseRequest::InitAsDefaultInstance();
}

void InitDefaultsScheduleCloseRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsScheduleCloseRequestImpl);
}

void InitDefaultsScheduleCloseResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ScheduleCloseResponse_default_instance_;
    new (ptr) ::ScheduleCloseResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ScheduleCloseResponse::InitAsDefaultInstance();
}

void InitDefaultsScheduleCloseResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsScheduleCloseResponseImpl);
}

void InitDefaultsOperationRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_OperationRequest_default_instance_;
    new (ptr) ::OperationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OperationRequest::InitAsDefaultInstance();
}

void InitDefaultsOperationRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOperationRequestImpl);
}

void InitDefaultsOperationResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_OperationResponse_default_instance_;
    new (ptr) ::OperationResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OperationResponse::InitAsDefaultInstance();
}

void InitDefaultsOperationResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOperationResponseImpl);
}

void InitDefaultsTvmRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_TvmRequest_default_instance_;
    new (ptr) ::TvmRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TvmRequest::InitAsDefaultInstance();
}

void InitDefaultsTvmRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTvmRequestImpl);
}

void InitDefaultsTvmResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_TvmResponse_default_instance_;
    new (ptr) ::TvmResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TvmResponse::InitAsDefaultInstance();
}

void InitDefaultsTvmResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTvmResponseImpl);
}

void InitDefaultsMsgStokeRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_MsgStokeRequest_default_instance_;
    new (ptr) ::MsgStokeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MsgStokeRequest::InitAsDefaultInstance();
}

void InitDefaultsMsgStokeRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMsgStokeRequestImpl);
}

void InitDefaultsMsgStokeResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_MsgStokeResponse_default_instance_;
    new (ptr) ::MsgStokeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MsgStokeResponse::InitAsDefaultInstance();
}

void InitDefaultsMsgStokeResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMsgStokeResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[16];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleInitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleInitRequest, algorithm_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleInitRequest, input_image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleInitRequest, max_stage_directive_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleInitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleInitResponse, max_stage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleInitResponse, max_directive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleInitResponse, max_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleInitResponse, schedule_map_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleInitResponse, init_time_sec_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleStepRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleStepRequest, op_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleStepResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleStepResponse, exec_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleStepResponse, exec_timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleStepResponse, op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleStepResponse, exec_time_sec_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleResetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleResetRequest, op_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleResetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleResetResponse, op_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleRenderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleRenderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleRenderResponse, schedule_str_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleCloseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ScheduleCloseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OperationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OperationRequest, map_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OperationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OperationResponse, elem_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TvmRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TvmRequest, action_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TvmResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TvmResponse, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TvmResponse, reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TvmResponse, maxlen_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgStokeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgStokeRequest, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgStokeRequest, cost_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgStokeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgStokeResponse, action_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ScheduleInitRequest)},
  { 8, -1, sizeof(::ScheduleInitResponse)},
  { 18, -1, sizeof(::ScheduleStepRequest)},
  { 24, -1, sizeof(::ScheduleStepResponse)},
  { 33, -1, sizeof(::ScheduleResetRequest)},
  { 39, -1, sizeof(::ScheduleResetResponse)},
  { 45, -1, sizeof(::ScheduleRenderRequest)},
  { 50, -1, sizeof(::ScheduleRenderResponse)},
  { 56, -1, sizeof(::ScheduleCloseRequest)},
  { 61, -1, sizeof(::ScheduleCloseResponse)},
  { 66, -1, sizeof(::OperationRequest)},
  { 72, -1, sizeof(::OperationResponse)},
  { 78, -1, sizeof(::TvmRequest)},
  { 84, -1, sizeof(::TvmResponse)},
  { 92, -1, sizeof(::MsgStokeRequest)},
  { 99, -1, sizeof(::MsgStokeResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ScheduleInitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ScheduleInitResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ScheduleStepRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ScheduleStepResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ScheduleResetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ScheduleResetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ScheduleRenderRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ScheduleRenderResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ScheduleCloseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ScheduleCloseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_OperationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_OperationResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TvmRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TvmResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MsgStokeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MsgStokeResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "schedule.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016schedule.proto\"]\n\023ScheduleInitRequest\022"
      "\024\n\014algorithm_id\030\001 \001(\005\022\023\n\013input_image\030\002 \001"
      "(\t\022\033\n\023max_stage_directive\030\003 \001(\005\"\206\001\n\024Sche"
      "duleInitResponse\022\021\n\tmax_stage\030\001 \001(\005\022\025\n\rm"
      "ax_directive\030\002 \001(\005\022\021\n\tmax_param\030\003 \001(\005\022\032\n"
      "\022schedule_map_range\030\004 \001(\005\022\025\n\rinit_time_s"
      "ec\030\005 \001(\001\"4\n\023ScheduleStepRequest\022\035\n\002op\030\001 "
      "\001(\0132\021.OperationRequest\"w\n\024ScheduleStepRe"
      "sponse\022\022\n\nexec_error\030\001 \001(\010\022\024\n\014exec_timeo"
      "ut\030\002 \001(\010\022\036\n\002op\030\003 \001(\0132\022.OperationResponse"
      "\022\025\n\rexec_time_sec\030\004 \001(\001\"5\n\024ScheduleReset"
      "Request\022\035\n\002op\030\001 \003(\0132\021.OperationRequest\"7"
      "\n\025ScheduleResetResponse\022\036\n\002op\030\001 \003(\0132\022.Op"
      "erationResponse\"\027\n\025ScheduleRenderRequest"
      "\".\n\026ScheduleRenderResponse\022\024\n\014schedule_s"
      "tr\030\001 \003(\t\"\026\n\024ScheduleCloseRequest\"\027\n\025Sche"
      "duleCloseResponse\"$\n\020OperationRequest\022\020\n"
      "\010map_code\030\001 \001(\005\"$\n\021OperationResponse\022\017\n\007"
      "elem_id\030\001 \003(\005\"\034\n\nTvmRequest\022\016\n\006action\030\001 "
      "\001(\005\"<\n\013TvmResponse\022\r\n\005state\030\001 \001(\t\022\016\n\006rew"
      "ard\030\002 \001(\001\022\016\n\006maxLen\030\003 \001(\005\"-\n\017MsgStokeReq"
      "uest\022\014\n\004code\030\001 \001(\t\022\014\n\004cost\030\002 \001(\001\"\"\n\020MsgS"
      "tokeResponse\022\016\n\006action\030\001 \001(\0052\215\003\n\017Schedul"
      "eService\0225\n\004init\022\024.ScheduleInitRequest\032\025"
      ".ScheduleInitResponse\"\000\0225\n\004step\022\024.Schedu"
      "leStepRequest\032\025.ScheduleStepResponse\"\000\0228"
      "\n\005reset\022\025.ScheduleResetRequest\032\026.Schedul"
      "eResetResponse\"\000\022;\n\006render\022\026.ScheduleRen"
      "derRequest\032\027.ScheduleRenderResponse\"\000\0228\n"
      "\005close\022\025.ScheduleCloseRequest\032\026.Schedule"
      "CloseResponse\"\000\022%\n\006GetTvm\022\013.TvmRequest\032\014"
      ".TvmResponse\"\000\0224\n\013GetStokeMsg\022\020.MsgStoke"
      "Request\032\021.MsgStokeResponse\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1316);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "schedule.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_schedule_2eproto

// ===================================================================

void ScheduleInitRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScheduleInitRequest::kAlgorithmIdFieldNumber;
const int ScheduleInitRequest::kInputImageFieldNumber;
const int ScheduleInitRequest::kMaxStageDirectiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScheduleInitRequest::ScheduleInitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_schedule_2eproto::InitDefaultsScheduleInitRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ScheduleInitRequest)
}
ScheduleInitRequest::ScheduleInitRequest(const ScheduleInitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  input_image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.input_image().size() > 0) {
    input_image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_image_);
  }
  ::memcpy(&algorithm_id_, &from.algorithm_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_stage_directive_) -
    reinterpret_cast<char*>(&algorithm_id_)) + sizeof(max_stage_directive_));
  // @@protoc_insertion_point(copy_constructor:ScheduleInitRequest)
}

void ScheduleInitRequest::SharedCtor() {
  input_image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&algorithm_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_stage_directive_) -
      reinterpret_cast<char*>(&algorithm_id_)) + sizeof(max_stage_directive_));
  _cached_size_ = 0;
}

ScheduleInitRequest::~ScheduleInitRequest() {
  // @@protoc_insertion_point(destructor:ScheduleInitRequest)
  SharedDtor();
}

void ScheduleInitRequest::SharedDtor() {
  input_image_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ScheduleInitRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScheduleInitRequest::descriptor() {
  ::protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScheduleInitRequest& ScheduleInitRequest::default_instance() {
  ::protobuf_schedule_2eproto::InitDefaultsScheduleInitRequest();
  return *internal_default_instance();
}

ScheduleInitRequest* ScheduleInitRequest::New(::google::protobuf::Arena* arena) const {
  ScheduleInitRequest* n = new ScheduleInitRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScheduleInitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ScheduleInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&algorithm_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_stage_directive_) -
      reinterpret_cast<char*>(&algorithm_id_)) + sizeof(max_stage_directive_));
  _internal_metadata_.Clear();
}

bool ScheduleInitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ScheduleInitRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 algorithm_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &algorithm_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string input_image = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_input_image()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->input_image().data(), static_cast<int>(this->input_image().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ScheduleInitRequest.input_image"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_stage_directive = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_stage_directive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ScheduleInitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ScheduleInitRequest)
  return false;
#undef DO_
}

void ScheduleInitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ScheduleInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 algorithm_id = 1;
  if (this->algorithm_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->algorithm_id(), output);
  }

  // string input_image = 2;
  if (this->input_image().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_image().data(), static_cast<int>(this->input_image().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ScheduleInitRequest.input_image");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->input_image(), output);
  }

  // int32 max_stage_directive = 3;
  if (this->max_stage_directive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max_stage_directive(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ScheduleInitRequest)
}

::google::protobuf::uint8* ScheduleInitRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ScheduleInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 algorithm_id = 1;
  if (this->algorithm_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->algorithm_id(), target);
  }

  // string input_image = 2;
  if (this->input_image().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_image().data(), static_cast<int>(this->input_image().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ScheduleInitRequest.input_image");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->input_image(), target);
  }

  // int32 max_stage_directive = 3;
  if (this->max_stage_directive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max_stage_directive(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ScheduleInitRequest)
  return target;
}

size_t ScheduleInitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ScheduleInitRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string input_image = 2;
  if (this->input_image().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->input_image());
  }

  // int32 algorithm_id = 1;
  if (this->algorithm_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->algorithm_id());
  }

  // int32 max_stage_directive = 3;
  if (this->max_stage_directive() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_stage_directive());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScheduleInitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ScheduleInitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ScheduleInitRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScheduleInitRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ScheduleInitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ScheduleInitRequest)
    MergeFrom(*source);
  }
}

void ScheduleInitRequest::MergeFrom(const ScheduleInitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ScheduleInitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.input_image().size() > 0) {

    input_image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_image_);
  }
  if (from.algorithm_id() != 0) {
    set_algorithm_id(from.algorithm_id());
  }
  if (from.max_stage_directive() != 0) {
    set_max_stage_directive(from.max_stage_directive());
  }
}

void ScheduleInitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ScheduleInitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScheduleInitRequest::CopyFrom(const ScheduleInitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ScheduleInitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScheduleInitRequest::IsInitialized() const {
  return true;
}

void ScheduleInitRequest::Swap(ScheduleInitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScheduleInitRequest::InternalSwap(ScheduleInitRequest* other) {
  using std::swap;
  input_image_.Swap(&other->input_image_);
  swap(algorithm_id_, other->algorithm_id_);
  swap(max_stage_directive_, other->max_stage_directive_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScheduleInitRequest::GetMetadata() const {
  protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScheduleInitResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScheduleInitResponse::kMaxStageFieldNumber;
const int ScheduleInitResponse::kMaxDirectiveFieldNumber;
const int ScheduleInitResponse::kMaxParamFieldNumber;
const int ScheduleInitResponse::kScheduleMapRangeFieldNumber;
const int ScheduleInitResponse::kInitTimeSecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScheduleInitResponse::ScheduleInitResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_schedule_2eproto::InitDefaultsScheduleInitResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ScheduleInitResponse)
}
ScheduleInitResponse::ScheduleInitResponse(const ScheduleInitResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&max_stage_, &from.max_stage_,
    static_cast<size_t>(reinterpret_cast<char*>(&init_time_sec_) -
    reinterpret_cast<char*>(&max_stage_)) + sizeof(init_time_sec_));
  // @@protoc_insertion_point(copy_constructor:ScheduleInitResponse)
}

void ScheduleInitResponse::SharedCtor() {
  ::memset(&max_stage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&init_time_sec_) -
      reinterpret_cast<char*>(&max_stage_)) + sizeof(init_time_sec_));
  _cached_size_ = 0;
}

ScheduleInitResponse::~ScheduleInitResponse() {
  // @@protoc_insertion_point(destructor:ScheduleInitResponse)
  SharedDtor();
}

void ScheduleInitResponse::SharedDtor() {
}

void ScheduleInitResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScheduleInitResponse::descriptor() {
  ::protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScheduleInitResponse& ScheduleInitResponse::default_instance() {
  ::protobuf_schedule_2eproto::InitDefaultsScheduleInitResponse();
  return *internal_default_instance();
}

ScheduleInitResponse* ScheduleInitResponse::New(::google::protobuf::Arena* arena) const {
  ScheduleInitResponse* n = new ScheduleInitResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScheduleInitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ScheduleInitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&max_stage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&init_time_sec_) -
      reinterpret_cast<char*>(&max_stage_)) + sizeof(init_time_sec_));
  _internal_metadata_.Clear();
}

bool ScheduleInitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ScheduleInitResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 max_stage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_stage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_directive = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_directive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_param = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 schedule_map_range = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &schedule_map_range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double init_time_sec = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &init_time_sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ScheduleInitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ScheduleInitResponse)
  return false;
#undef DO_
}

void ScheduleInitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ScheduleInitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 max_stage = 1;
  if (this->max_stage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->max_stage(), output);
  }

  // int32 max_directive = 2;
  if (this->max_directive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->max_directive(), output);
  }

  // int32 max_param = 3;
  if (this->max_param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max_param(), output);
  }

  // int32 schedule_map_range = 4;
  if (this->schedule_map_range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->schedule_map_range(), output);
  }

  // double init_time_sec = 5;
  if (this->init_time_sec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->init_time_sec(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ScheduleInitResponse)
}

::google::protobuf::uint8* ScheduleInitResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ScheduleInitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 max_stage = 1;
  if (this->max_stage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->max_stage(), target);
  }

  // int32 max_directive = 2;
  if (this->max_directive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->max_directive(), target);
  }

  // int32 max_param = 3;
  if (this->max_param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max_param(), target);
  }

  // int32 schedule_map_range = 4;
  if (this->schedule_map_range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->schedule_map_range(), target);
  }

  // double init_time_sec = 5;
  if (this->init_time_sec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->init_time_sec(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ScheduleInitResponse)
  return target;
}

size_t ScheduleInitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ScheduleInitResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 max_stage = 1;
  if (this->max_stage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_stage());
  }

  // int32 max_directive = 2;
  if (this->max_directive() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_directive());
  }

  // int32 max_param = 3;
  if (this->max_param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_param());
  }

  // int32 schedule_map_range = 4;
  if (this->schedule_map_range() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->schedule_map_range());
  }

  // double init_time_sec = 5;
  if (this->init_time_sec() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScheduleInitResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ScheduleInitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ScheduleInitResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScheduleInitResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ScheduleInitResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ScheduleInitResponse)
    MergeFrom(*source);
  }
}

void ScheduleInitResponse::MergeFrom(const ScheduleInitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ScheduleInitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.max_stage() != 0) {
    set_max_stage(from.max_stage());
  }
  if (from.max_directive() != 0) {
    set_max_directive(from.max_directive());
  }
  if (from.max_param() != 0) {
    set_max_param(from.max_param());
  }
  if (from.schedule_map_range() != 0) {
    set_schedule_map_range(from.schedule_map_range());
  }
  if (from.init_time_sec() != 0) {
    set_init_time_sec(from.init_time_sec());
  }
}

void ScheduleInitResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ScheduleInitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScheduleInitResponse::CopyFrom(const ScheduleInitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ScheduleInitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScheduleInitResponse::IsInitialized() const {
  return true;
}

void ScheduleInitResponse::Swap(ScheduleInitResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScheduleInitResponse::InternalSwap(ScheduleInitResponse* other) {
  using std::swap;
  swap(max_stage_, other->max_stage_);
  swap(max_directive_, other->max_directive_);
  swap(max_param_, other->max_param_);
  swap(schedule_map_range_, other->schedule_map_range_);
  swap(init_time_sec_, other->init_time_sec_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScheduleInitResponse::GetMetadata() const {
  protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScheduleStepRequest::InitAsDefaultInstance() {
  ::_ScheduleStepRequest_default_instance_._instance.get_mutable()->op_ = const_cast< ::OperationRequest*>(
      ::OperationRequest::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScheduleStepRequest::kOpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScheduleStepRequest::ScheduleStepRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_schedule_2eproto::InitDefaultsScheduleStepRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ScheduleStepRequest)
}
ScheduleStepRequest::ScheduleStepRequest(const ScheduleStepRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_op()) {
    op_ = new ::OperationRequest(*from.op_);
  } else {
    op_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ScheduleStepRequest)
}

void ScheduleStepRequest::SharedCtor() {
  op_ = NULL;
  _cached_size_ = 0;
}

ScheduleStepRequest::~ScheduleStepRequest() {
  // @@protoc_insertion_point(destructor:ScheduleStepRequest)
  SharedDtor();
}

void ScheduleStepRequest::SharedDtor() {
  if (this != internal_default_instance()) delete op_;
}

void ScheduleStepRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScheduleStepRequest::descriptor() {
  ::protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScheduleStepRequest& ScheduleStepRequest::default_instance() {
  ::protobuf_schedule_2eproto::InitDefaultsScheduleStepRequest();
  return *internal_default_instance();
}

ScheduleStepRequest* ScheduleStepRequest::New(::google::protobuf::Arena* arena) const {
  ScheduleStepRequest* n = new ScheduleStepRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScheduleStepRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ScheduleStepRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && op_ != NULL) {
    delete op_;
  }
  op_ = NULL;
  _internal_metadata_.Clear();
}

bool ScheduleStepRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ScheduleStepRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .OperationRequest op = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ScheduleStepRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ScheduleStepRequest)
  return false;
#undef DO_
}

void ScheduleStepRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ScheduleStepRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OperationRequest op = 1;
  if (this->has_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->op_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ScheduleStepRequest)
}

::google::protobuf::uint8* ScheduleStepRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ScheduleStepRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OperationRequest op = 1;
  if (this->has_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->op_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ScheduleStepRequest)
  return target;
}

size_t ScheduleStepRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ScheduleStepRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .OperationRequest op = 1;
  if (this->has_op()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->op_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScheduleStepRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ScheduleStepRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ScheduleStepRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScheduleStepRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ScheduleStepRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ScheduleStepRequest)
    MergeFrom(*source);
  }
}

void ScheduleStepRequest::MergeFrom(const ScheduleStepRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ScheduleStepRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_op()) {
    mutable_op()->::OperationRequest::MergeFrom(from.op());
  }
}

void ScheduleStepRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ScheduleStepRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScheduleStepRequest::CopyFrom(const ScheduleStepRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ScheduleStepRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScheduleStepRequest::IsInitialized() const {
  return true;
}

void ScheduleStepRequest::Swap(ScheduleStepRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScheduleStepRequest::InternalSwap(ScheduleStepRequest* other) {
  using std::swap;
  swap(op_, other->op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScheduleStepRequest::GetMetadata() const {
  protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScheduleStepResponse::InitAsDefaultInstance() {
  ::_ScheduleStepResponse_default_instance_._instance.get_mutable()->op_ = const_cast< ::OperationResponse*>(
      ::OperationResponse::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScheduleStepResponse::kExecErrorFieldNumber;
const int ScheduleStepResponse::kExecTimeoutFieldNumber;
const int ScheduleStepResponse::kOpFieldNumber;
const int ScheduleStepResponse::kExecTimeSecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScheduleStepResponse::ScheduleStepResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_schedule_2eproto::InitDefaultsScheduleStepResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ScheduleStepResponse)
}
ScheduleStepResponse::ScheduleStepResponse(const ScheduleStepResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_op()) {
    op_ = new ::OperationResponse(*from.op_);
  } else {
    op_ = NULL;
  }
  ::memcpy(&exec_time_sec_, &from.exec_time_sec_,
    static_cast<size_t>(reinterpret_cast<char*>(&exec_timeout_) -
    reinterpret_cast<char*>(&exec_time_sec_)) + sizeof(exec_timeout_));
  // @@protoc_insertion_point(copy_constructor:ScheduleStepResponse)
}

void ScheduleStepResponse::SharedCtor() {
  ::memset(&op_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exec_timeout_) -
      reinterpret_cast<char*>(&op_)) + sizeof(exec_timeout_));
  _cached_size_ = 0;
}

ScheduleStepResponse::~ScheduleStepResponse() {
  // @@protoc_insertion_point(destructor:ScheduleStepResponse)
  SharedDtor();
}

void ScheduleStepResponse::SharedDtor() {
  if (this != internal_default_instance()) delete op_;
}

void ScheduleStepResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScheduleStepResponse::descriptor() {
  ::protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScheduleStepResponse& ScheduleStepResponse::default_instance() {
  ::protobuf_schedule_2eproto::InitDefaultsScheduleStepResponse();
  return *internal_default_instance();
}

ScheduleStepResponse* ScheduleStepResponse::New(::google::protobuf::Arena* arena) const {
  ScheduleStepResponse* n = new ScheduleStepResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScheduleStepResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ScheduleStepResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && op_ != NULL) {
    delete op_;
  }
  op_ = NULL;
  ::memset(&exec_time_sec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exec_timeout_) -
      reinterpret_cast<char*>(&exec_time_sec_)) + sizeof(exec_timeout_));
  _internal_metadata_.Clear();
}

bool ScheduleStepResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ScheduleStepResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool exec_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &exec_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool exec_timeout = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &exec_timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .OperationResponse op = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double exec_time_sec = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &exec_time_sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ScheduleStepResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ScheduleStepResponse)
  return false;
#undef DO_
}

void ScheduleStepResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ScheduleStepResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool exec_error = 1;
  if (this->exec_error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->exec_error(), output);
  }

  // bool exec_timeout = 2;
  if (this->exec_timeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->exec_timeout(), output);
  }

  // .OperationResponse op = 3;
  if (this->has_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->op_, output);
  }

  // double exec_time_sec = 4;
  if (this->exec_time_sec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->exec_time_sec(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ScheduleStepResponse)
}

::google::protobuf::uint8* ScheduleStepResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ScheduleStepResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool exec_error = 1;
  if (this->exec_error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->exec_error(), target);
  }

  // bool exec_timeout = 2;
  if (this->exec_timeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->exec_timeout(), target);
  }

  // .OperationResponse op = 3;
  if (this->has_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->op_, deterministic, target);
  }

  // double exec_time_sec = 4;
  if (this->exec_time_sec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->exec_time_sec(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ScheduleStepResponse)
  return target;
}

size_t ScheduleStepResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ScheduleStepResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .OperationResponse op = 3;
  if (this->has_op()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->op_);
  }

  // double exec_time_sec = 4;
  if (this->exec_time_sec() != 0) {
    total_size += 1 + 8;
  }

  // bool exec_error = 1;
  if (this->exec_error() != 0) {
    total_size += 1 + 1;
  }

  // bool exec_timeout = 2;
  if (this->exec_timeout() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScheduleStepResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ScheduleStepResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ScheduleStepResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScheduleStepResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ScheduleStepResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ScheduleStepResponse)
    MergeFrom(*source);
  }
}

void ScheduleStepResponse::MergeFrom(const ScheduleStepResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ScheduleStepResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_op()) {
    mutable_op()->::OperationResponse::MergeFrom(from.op());
  }
  if (from.exec_time_sec() != 0) {
    set_exec_time_sec(from.exec_time_sec());
  }
  if (from.exec_error() != 0) {
    set_exec_error(from.exec_error());
  }
  if (from.exec_timeout() != 0) {
    set_exec_timeout(from.exec_timeout());
  }
}

void ScheduleStepResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ScheduleStepResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScheduleStepResponse::CopyFrom(const ScheduleStepResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ScheduleStepResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScheduleStepResponse::IsInitialized() const {
  return true;
}

void ScheduleStepResponse::Swap(ScheduleStepResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScheduleStepResponse::InternalSwap(ScheduleStepResponse* other) {
  using std::swap;
  swap(op_, other->op_);
  swap(exec_time_sec_, other->exec_time_sec_);
  swap(exec_error_, other->exec_error_);
  swap(exec_timeout_, other->exec_timeout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScheduleStepResponse::GetMetadata() const {
  protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScheduleResetRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScheduleResetRequest::kOpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScheduleResetRequest::ScheduleResetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_schedule_2eproto::InitDefaultsScheduleResetRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ScheduleResetRequest)
}
ScheduleResetRequest::ScheduleResetRequest(const ScheduleResetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      op_(from.op_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ScheduleResetRequest)
}

void ScheduleResetRequest::SharedCtor() {
  _cached_size_ = 0;
}

ScheduleResetRequest::~ScheduleResetRequest() {
  // @@protoc_insertion_point(destructor:ScheduleResetRequest)
  SharedDtor();
}

void ScheduleResetRequest::SharedDtor() {
}

void ScheduleResetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScheduleResetRequest::descriptor() {
  ::protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScheduleResetRequest& ScheduleResetRequest::default_instance() {
  ::protobuf_schedule_2eproto::InitDefaultsScheduleResetRequest();
  return *internal_default_instance();
}

ScheduleResetRequest* ScheduleResetRequest::New(::google::protobuf::Arena* arena) const {
  ScheduleResetRequest* n = new ScheduleResetRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScheduleResetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ScheduleResetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  op_.Clear();
  _internal_metadata_.Clear();
}

bool ScheduleResetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ScheduleResetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .OperationRequest op = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ScheduleResetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ScheduleResetRequest)
  return false;
#undef DO_
}

void ScheduleResetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ScheduleResetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .OperationRequest op = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->op_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->op(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ScheduleResetRequest)
}

::google::protobuf::uint8* ScheduleResetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ScheduleResetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .OperationRequest op = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->op_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->op(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ScheduleResetRequest)
  return target;
}

size_t ScheduleResetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ScheduleResetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .OperationRequest op = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->op_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->op(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScheduleResetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ScheduleResetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ScheduleResetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScheduleResetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ScheduleResetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ScheduleResetRequest)
    MergeFrom(*source);
  }
}

void ScheduleResetRequest::MergeFrom(const ScheduleResetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ScheduleResetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  op_.MergeFrom(from.op_);
}

void ScheduleResetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ScheduleResetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScheduleResetRequest::CopyFrom(const ScheduleResetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ScheduleResetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScheduleResetRequest::IsInitialized() const {
  return true;
}

void ScheduleResetRequest::Swap(ScheduleResetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScheduleResetRequest::InternalSwap(ScheduleResetRequest* other) {
  using std::swap;
  op_.InternalSwap(&other->op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScheduleResetRequest::GetMetadata() const {
  protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScheduleResetResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScheduleResetResponse::kOpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScheduleResetResponse::ScheduleResetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_schedule_2eproto::InitDefaultsScheduleResetResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ScheduleResetResponse)
}
ScheduleResetResponse::ScheduleResetResponse(const ScheduleResetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      op_(from.op_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ScheduleResetResponse)
}

void ScheduleResetResponse::SharedCtor() {
  _cached_size_ = 0;
}

ScheduleResetResponse::~ScheduleResetResponse() {
  // @@protoc_insertion_point(destructor:ScheduleResetResponse)
  SharedDtor();
}

void ScheduleResetResponse::SharedDtor() {
}

void ScheduleResetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScheduleResetResponse::descriptor() {
  ::protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScheduleResetResponse& ScheduleResetResponse::default_instance() {
  ::protobuf_schedule_2eproto::InitDefaultsScheduleResetResponse();
  return *internal_default_instance();
}

ScheduleResetResponse* ScheduleResetResponse::New(::google::protobuf::Arena* arena) const {
  ScheduleResetResponse* n = new ScheduleResetResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScheduleResetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ScheduleResetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  op_.Clear();
  _internal_metadata_.Clear();
}

bool ScheduleResetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ScheduleResetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .OperationResponse op = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ScheduleResetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ScheduleResetResponse)
  return false;
#undef DO_
}

void ScheduleResetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ScheduleResetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .OperationResponse op = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->op_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->op(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ScheduleResetResponse)
}

::google::protobuf::uint8* ScheduleResetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ScheduleResetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .OperationResponse op = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->op_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->op(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ScheduleResetResponse)
  return target;
}

size_t ScheduleResetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ScheduleResetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .OperationResponse op = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->op_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->op(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScheduleResetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ScheduleResetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ScheduleResetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScheduleResetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ScheduleResetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ScheduleResetResponse)
    MergeFrom(*source);
  }
}

void ScheduleResetResponse::MergeFrom(const ScheduleResetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ScheduleResetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  op_.MergeFrom(from.op_);
}

void ScheduleResetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ScheduleResetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScheduleResetResponse::CopyFrom(const ScheduleResetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ScheduleResetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScheduleResetResponse::IsInitialized() const {
  return true;
}

void ScheduleResetResponse::Swap(ScheduleResetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScheduleResetResponse::InternalSwap(ScheduleResetResponse* other) {
  using std::swap;
  op_.InternalSwap(&other->op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScheduleResetResponse::GetMetadata() const {
  protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScheduleRenderRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScheduleRenderRequest::ScheduleRenderRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_schedule_2eproto::InitDefaultsScheduleRenderRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ScheduleRenderRequest)
}
ScheduleRenderRequest::ScheduleRenderRequest(const ScheduleRenderRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ScheduleRenderRequest)
}

void ScheduleRenderRequest::SharedCtor() {
  _cached_size_ = 0;
}

ScheduleRenderRequest::~ScheduleRenderRequest() {
  // @@protoc_insertion_point(destructor:ScheduleRenderRequest)
  SharedDtor();
}

void ScheduleRenderRequest::SharedDtor() {
}

void ScheduleRenderRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScheduleRenderRequest::descriptor() {
  ::protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScheduleRenderRequest& ScheduleRenderRequest::default_instance() {
  ::protobuf_schedule_2eproto::InitDefaultsScheduleRenderRequest();
  return *internal_default_instance();
}

ScheduleRenderRequest* ScheduleRenderRequest::New(::google::protobuf::Arena* arena) const {
  ScheduleRenderRequest* n = new ScheduleRenderRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScheduleRenderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ScheduleRenderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ScheduleRenderRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ScheduleRenderRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ScheduleRenderRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ScheduleRenderRequest)
  return false;
#undef DO_
}

void ScheduleRenderRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ScheduleRenderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ScheduleRenderRequest)
}

::google::protobuf::uint8* ScheduleRenderRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ScheduleRenderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ScheduleRenderRequest)
  return target;
}

size_t ScheduleRenderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ScheduleRenderRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScheduleRenderRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ScheduleRenderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ScheduleRenderRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScheduleRenderRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ScheduleRenderRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ScheduleRenderRequest)
    MergeFrom(*source);
  }
}

void ScheduleRenderRequest::MergeFrom(const ScheduleRenderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ScheduleRenderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ScheduleRenderRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ScheduleRenderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScheduleRenderRequest::CopyFrom(const ScheduleRenderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ScheduleRenderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScheduleRenderRequest::IsInitialized() const {
  return true;
}

void ScheduleRenderRequest::Swap(ScheduleRenderRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScheduleRenderRequest::InternalSwap(ScheduleRenderRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScheduleRenderRequest::GetMetadata() const {
  protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScheduleRenderResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScheduleRenderResponse::kScheduleStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScheduleRenderResponse::ScheduleRenderResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_schedule_2eproto::InitDefaultsScheduleRenderResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ScheduleRenderResponse)
}
ScheduleRenderResponse::ScheduleRenderResponse(const ScheduleRenderResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      schedule_str_(from.schedule_str_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ScheduleRenderResponse)
}

void ScheduleRenderResponse::SharedCtor() {
  _cached_size_ = 0;
}

ScheduleRenderResponse::~ScheduleRenderResponse() {
  // @@protoc_insertion_point(destructor:ScheduleRenderResponse)
  SharedDtor();
}

void ScheduleRenderResponse::SharedDtor() {
}

void ScheduleRenderResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScheduleRenderResponse::descriptor() {
  ::protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScheduleRenderResponse& ScheduleRenderResponse::default_instance() {
  ::protobuf_schedule_2eproto::InitDefaultsScheduleRenderResponse();
  return *internal_default_instance();
}

ScheduleRenderResponse* ScheduleRenderResponse::New(::google::protobuf::Arena* arena) const {
  ScheduleRenderResponse* n = new ScheduleRenderResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScheduleRenderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ScheduleRenderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  schedule_str_.Clear();
  _internal_metadata_.Clear();
}

bool ScheduleRenderResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ScheduleRenderResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string schedule_str = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_schedule_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->schedule_str(this->schedule_str_size() - 1).data(),
            static_cast<int>(this->schedule_str(this->schedule_str_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ScheduleRenderResponse.schedule_str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ScheduleRenderResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ScheduleRenderResponse)
  return false;
#undef DO_
}

void ScheduleRenderResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ScheduleRenderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string schedule_str = 1;
  for (int i = 0, n = this->schedule_str_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->schedule_str(i).data(), static_cast<int>(this->schedule_str(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ScheduleRenderResponse.schedule_str");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->schedule_str(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ScheduleRenderResponse)
}

::google::protobuf::uint8* ScheduleRenderResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ScheduleRenderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string schedule_str = 1;
  for (int i = 0, n = this->schedule_str_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->schedule_str(i).data(), static_cast<int>(this->schedule_str(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ScheduleRenderResponse.schedule_str");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->schedule_str(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ScheduleRenderResponse)
  return target;
}

size_t ScheduleRenderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ScheduleRenderResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string schedule_str = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->schedule_str_size());
  for (int i = 0, n = this->schedule_str_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->schedule_str(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScheduleRenderResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ScheduleRenderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ScheduleRenderResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScheduleRenderResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ScheduleRenderResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ScheduleRenderResponse)
    MergeFrom(*source);
  }
}

void ScheduleRenderResponse::MergeFrom(const ScheduleRenderResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ScheduleRenderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  schedule_str_.MergeFrom(from.schedule_str_);
}

void ScheduleRenderResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ScheduleRenderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScheduleRenderResponse::CopyFrom(const ScheduleRenderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ScheduleRenderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScheduleRenderResponse::IsInitialized() const {
  return true;
}

void ScheduleRenderResponse::Swap(ScheduleRenderResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScheduleRenderResponse::InternalSwap(ScheduleRenderResponse* other) {
  using std::swap;
  schedule_str_.InternalSwap(&other->schedule_str_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScheduleRenderResponse::GetMetadata() const {
  protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScheduleCloseRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScheduleCloseRequest::ScheduleCloseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_schedule_2eproto::InitDefaultsScheduleCloseRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ScheduleCloseRequest)
}
ScheduleCloseRequest::ScheduleCloseRequest(const ScheduleCloseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ScheduleCloseRequest)
}

void ScheduleCloseRequest::SharedCtor() {
  _cached_size_ = 0;
}

ScheduleCloseRequest::~ScheduleCloseRequest() {
  // @@protoc_insertion_point(destructor:ScheduleCloseRequest)
  SharedDtor();
}

void ScheduleCloseRequest::SharedDtor() {
}

void ScheduleCloseRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScheduleCloseRequest::descriptor() {
  ::protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScheduleCloseRequest& ScheduleCloseRequest::default_instance() {
  ::protobuf_schedule_2eproto::InitDefaultsScheduleCloseRequest();
  return *internal_default_instance();
}

ScheduleCloseRequest* ScheduleCloseRequest::New(::google::protobuf::Arena* arena) const {
  ScheduleCloseRequest* n = new ScheduleCloseRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScheduleCloseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ScheduleCloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ScheduleCloseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ScheduleCloseRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ScheduleCloseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ScheduleCloseRequest)
  return false;
#undef DO_
}

void ScheduleCloseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ScheduleCloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ScheduleCloseRequest)
}

::google::protobuf::uint8* ScheduleCloseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ScheduleCloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ScheduleCloseRequest)
  return target;
}

size_t ScheduleCloseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ScheduleCloseRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScheduleCloseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ScheduleCloseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ScheduleCloseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScheduleCloseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ScheduleCloseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ScheduleCloseRequest)
    MergeFrom(*source);
  }
}

void ScheduleCloseRequest::MergeFrom(const ScheduleCloseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ScheduleCloseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ScheduleCloseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ScheduleCloseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScheduleCloseRequest::CopyFrom(const ScheduleCloseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ScheduleCloseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScheduleCloseRequest::IsInitialized() const {
  return true;
}

void ScheduleCloseRequest::Swap(ScheduleCloseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScheduleCloseRequest::InternalSwap(ScheduleCloseRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScheduleCloseRequest::GetMetadata() const {
  protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScheduleCloseResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScheduleCloseResponse::ScheduleCloseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_schedule_2eproto::InitDefaultsScheduleCloseResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ScheduleCloseResponse)
}
ScheduleCloseResponse::ScheduleCloseResponse(const ScheduleCloseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ScheduleCloseResponse)
}

void ScheduleCloseResponse::SharedCtor() {
  _cached_size_ = 0;
}

ScheduleCloseResponse::~ScheduleCloseResponse() {
  // @@protoc_insertion_point(destructor:ScheduleCloseResponse)
  SharedDtor();
}

void ScheduleCloseResponse::SharedDtor() {
}

void ScheduleCloseResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScheduleCloseResponse::descriptor() {
  ::protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScheduleCloseResponse& ScheduleCloseResponse::default_instance() {
  ::protobuf_schedule_2eproto::InitDefaultsScheduleCloseResponse();
  return *internal_default_instance();
}

ScheduleCloseResponse* ScheduleCloseResponse::New(::google::protobuf::Arena* arena) const {
  ScheduleCloseResponse* n = new ScheduleCloseResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScheduleCloseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ScheduleCloseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ScheduleCloseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ScheduleCloseResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ScheduleCloseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ScheduleCloseResponse)
  return false;
#undef DO_
}

void ScheduleCloseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ScheduleCloseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ScheduleCloseResponse)
}

::google::protobuf::uint8* ScheduleCloseResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ScheduleCloseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ScheduleCloseResponse)
  return target;
}

size_t ScheduleCloseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ScheduleCloseResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScheduleCloseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ScheduleCloseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ScheduleCloseResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScheduleCloseResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ScheduleCloseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ScheduleCloseResponse)
    MergeFrom(*source);
  }
}

void ScheduleCloseResponse::MergeFrom(const ScheduleCloseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ScheduleCloseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ScheduleCloseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ScheduleCloseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScheduleCloseResponse::CopyFrom(const ScheduleCloseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ScheduleCloseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScheduleCloseResponse::IsInitialized() const {
  return true;
}

void ScheduleCloseResponse::Swap(ScheduleCloseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScheduleCloseResponse::InternalSwap(ScheduleCloseResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScheduleCloseResponse::GetMetadata() const {
  protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OperationRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationRequest::kMapCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationRequest::OperationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_schedule_2eproto::InitDefaultsOperationRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OperationRequest)
}
OperationRequest::OperationRequest(const OperationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_code_ = from.map_code_;
  // @@protoc_insertion_point(copy_constructor:OperationRequest)
}

void OperationRequest::SharedCtor() {
  map_code_ = 0;
  _cached_size_ = 0;
}

OperationRequest::~OperationRequest() {
  // @@protoc_insertion_point(destructor:OperationRequest)
  SharedDtor();
}

void OperationRequest::SharedDtor() {
}

void OperationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperationRequest::descriptor() {
  ::protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperationRequest& OperationRequest::default_instance() {
  ::protobuf_schedule_2eproto::InitDefaultsOperationRequest();
  return *internal_default_instance();
}

OperationRequest* OperationRequest::New(::google::protobuf::Arena* arena) const {
  OperationRequest* n = new OperationRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OperationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:OperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_code_ = 0;
  _internal_metadata_.Clear();
}

bool OperationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OperationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 map_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &map_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OperationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OperationRequest)
  return false;
#undef DO_
}

void OperationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 map_code = 1;
  if (this->map_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->map_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:OperationRequest)
}

::google::protobuf::uint8* OperationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OperationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 map_code = 1;
  if (this->map_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->map_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OperationRequest)
  return target;
}

size_t OperationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OperationRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 map_code = 1;
  if (this->map_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->map_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OperationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OperationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OperationRequest)
    MergeFrom(*source);
  }
}

void OperationRequest::MergeFrom(const OperationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OperationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.map_code() != 0) {
    set_map_code(from.map_code());
  }
}

void OperationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationRequest::CopyFrom(const OperationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationRequest::IsInitialized() const {
  return true;
}

void OperationRequest::Swap(OperationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperationRequest::InternalSwap(OperationRequest* other) {
  using std::swap;
  swap(map_code_, other->map_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OperationRequest::GetMetadata() const {
  protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OperationResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationResponse::kElemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationResponse::OperationResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_schedule_2eproto::InitDefaultsOperationResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OperationResponse)
}
OperationResponse::OperationResponse(const OperationResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      elem_id_(from.elem_id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:OperationResponse)
}

void OperationResponse::SharedCtor() {
  _cached_size_ = 0;
}

OperationResponse::~OperationResponse() {
  // @@protoc_insertion_point(destructor:OperationResponse)
  SharedDtor();
}

void OperationResponse::SharedDtor() {
}

void OperationResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperationResponse::descriptor() {
  ::protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperationResponse& OperationResponse::default_instance() {
  ::protobuf_schedule_2eproto::InitDefaultsOperationResponse();
  return *internal_default_instance();
}

OperationResponse* OperationResponse::New(::google::protobuf::Arena* arena) const {
  OperationResponse* n = new OperationResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OperationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:OperationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  elem_id_.Clear();
  _internal_metadata_.Clear();
}

bool OperationResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OperationResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 elem_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_elem_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_elem_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OperationResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OperationResponse)
  return false;
#undef DO_
}

void OperationResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OperationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 elem_id = 1;
  if (this->elem_id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _elem_id_cached_byte_size_));
  }
  for (int i = 0, n = this->elem_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->elem_id(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:OperationResponse)
}

::google::protobuf::uint8* OperationResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OperationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 elem_id = 1;
  if (this->elem_id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _elem_id_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->elem_id_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OperationResponse)
  return target;
}

size_t OperationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OperationResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 elem_id = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->elem_id_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _elem_id_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperationResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OperationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperationResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OperationResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OperationResponse)
    MergeFrom(*source);
  }
}

void OperationResponse::MergeFrom(const OperationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OperationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  elem_id_.MergeFrom(from.elem_id_);
}

void OperationResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OperationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationResponse::CopyFrom(const OperationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OperationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationResponse::IsInitialized() const {
  return true;
}

void OperationResponse::Swap(OperationResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperationResponse::InternalSwap(OperationResponse* other) {
  using std::swap;
  elem_id_.InternalSwap(&other->elem_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OperationResponse::GetMetadata() const {
  protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TvmRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TvmRequest::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TvmRequest::TvmRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_schedule_2eproto::InitDefaultsTvmRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TvmRequest)
}
TvmRequest::TvmRequest(const TvmRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  action_ = from.action_;
  // @@protoc_insertion_point(copy_constructor:TvmRequest)
}

void TvmRequest::SharedCtor() {
  action_ = 0;
  _cached_size_ = 0;
}

TvmRequest::~TvmRequest() {
  // @@protoc_insertion_point(destructor:TvmRequest)
  SharedDtor();
}

void TvmRequest::SharedDtor() {
}

void TvmRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TvmRequest::descriptor() {
  ::protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TvmRequest& TvmRequest::default_instance() {
  ::protobuf_schedule_2eproto::InitDefaultsTvmRequest();
  return *internal_default_instance();
}

TvmRequest* TvmRequest::New(::google::protobuf::Arena* arena) const {
  TvmRequest* n = new TvmRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TvmRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TvmRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_ = 0;
  _internal_metadata_.Clear();
}

bool TvmRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TvmRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TvmRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TvmRequest)
  return false;
#undef DO_
}

void TvmRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TvmRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 action = 1;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->action(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TvmRequest)
}

::google::protobuf::uint8* TvmRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TvmRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 action = 1;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->action(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TvmRequest)
  return target;
}

size_t TvmRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TvmRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 action = 1;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TvmRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TvmRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TvmRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TvmRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TvmRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TvmRequest)
    MergeFrom(*source);
  }
}

void TvmRequest::MergeFrom(const TvmRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TvmRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action() != 0) {
    set_action(from.action());
  }
}

void TvmRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TvmRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TvmRequest::CopyFrom(const TvmRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TvmRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TvmRequest::IsInitialized() const {
  return true;
}

void TvmRequest::Swap(TvmRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TvmRequest::InternalSwap(TvmRequest* other) {
  using std::swap;
  swap(action_, other->action_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TvmRequest::GetMetadata() const {
  protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TvmResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TvmResponse::kStateFieldNumber;
const int TvmResponse::kRewardFieldNumber;
const int TvmResponse::kMaxLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TvmResponse::TvmResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_schedule_2eproto::InitDefaultsTvmResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TvmResponse)
}
TvmResponse::TvmResponse(const TvmResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  ::memcpy(&reward_, &from.reward_,
    static_cast<size_t>(reinterpret_cast<char*>(&maxlen_) -
    reinterpret_cast<char*>(&reward_)) + sizeof(maxlen_));
  // @@protoc_insertion_point(copy_constructor:TvmResponse)
}

void TvmResponse::SharedCtor() {
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&reward_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxlen_) -
      reinterpret_cast<char*>(&reward_)) + sizeof(maxlen_));
  _cached_size_ = 0;
}

TvmResponse::~TvmResponse() {
  // @@protoc_insertion_point(destructor:TvmResponse)
  SharedDtor();
}

void TvmResponse::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TvmResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TvmResponse::descriptor() {
  ::protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TvmResponse& TvmResponse::default_instance() {
  ::protobuf_schedule_2eproto::InitDefaultsTvmResponse();
  return *internal_default_instance();
}

TvmResponse* TvmResponse::New(::google::protobuf::Arena* arena) const {
  TvmResponse* n = new TvmResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TvmResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TvmResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&reward_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxlen_) -
      reinterpret_cast<char*>(&reward_)) + sizeof(maxlen_));
  _internal_metadata_.Clear();
}

bool TvmResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TvmResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->state().data(), static_cast<int>(this->state().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TvmResponse.state"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double reward = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &reward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 maxLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TvmResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TvmResponse)
  return false;
#undef DO_
}

void TvmResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TvmResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string state = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->state().data(), static_cast<int>(this->state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TvmResponse.state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->state(), output);
  }

  // double reward = 2;
  if (this->reward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->reward(), output);
  }

  // int32 maxLen = 3;
  if (this->maxlen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->maxlen(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TvmResponse)
}

::google::protobuf::uint8* TvmResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TvmResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string state = 1;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->state().data(), static_cast<int>(this->state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TvmResponse.state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->state(), target);
  }

  // double reward = 2;
  if (this->reward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->reward(), target);
  }

  // int32 maxLen = 3;
  if (this->maxlen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->maxlen(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TvmResponse)
  return target;
}

size_t TvmResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TvmResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string state = 1;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->state());
  }

  // double reward = 2;
  if (this->reward() != 0) {
    total_size += 1 + 8;
  }

  // int32 maxLen = 3;
  if (this->maxlen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxlen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TvmResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TvmResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TvmResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TvmResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TvmResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TvmResponse)
    MergeFrom(*source);
  }
}

void TvmResponse::MergeFrom(const TvmResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TvmResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.reward() != 0) {
    set_reward(from.reward());
  }
  if (from.maxlen() != 0) {
    set_maxlen(from.maxlen());
  }
}

void TvmResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TvmResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TvmResponse::CopyFrom(const TvmResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TvmResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TvmResponse::IsInitialized() const {
  return true;
}

void TvmResponse::Swap(TvmResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TvmResponse::InternalSwap(TvmResponse* other) {
  using std::swap;
  state_.Swap(&other->state_);
  swap(reward_, other->reward_);
  swap(maxlen_, other->maxlen_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TvmResponse::GetMetadata() const {
  protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgStokeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgStokeRequest::kCodeFieldNumber;
const int MsgStokeRequest::kCostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgStokeRequest::MsgStokeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_schedule_2eproto::InitDefaultsMsgStokeRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgStokeRequest)
}
MsgStokeRequest::MsgStokeRequest(const MsgStokeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  cost_ = from.cost_;
  // @@protoc_insertion_point(copy_constructor:MsgStokeRequest)
}

void MsgStokeRequest::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cost_ = 0;
  _cached_size_ = 0;
}

MsgStokeRequest::~MsgStokeRequest() {
  // @@protoc_insertion_point(destructor:MsgStokeRequest)
  SharedDtor();
}

void MsgStokeRequest::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgStokeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgStokeRequest::descriptor() {
  ::protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgStokeRequest& MsgStokeRequest::default_instance() {
  ::protobuf_schedule_2eproto::InitDefaultsMsgStokeRequest();
  return *internal_default_instance();
}

MsgStokeRequest* MsgStokeRequest::New(::google::protobuf::Arena* arena) const {
  MsgStokeRequest* n = new MsgStokeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgStokeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgStokeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cost_ = 0;
  _internal_metadata_.Clear();
}

bool MsgStokeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgStokeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MsgStokeRequest.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double cost = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgStokeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgStokeRequest)
  return false;
#undef DO_
}

void MsgStokeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgStokeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MsgStokeRequest.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  // double cost = 2;
  if (this->cost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->cost(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgStokeRequest)
}

::google::protobuf::uint8* MsgStokeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgStokeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MsgStokeRequest.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  // double cost = 2;
  if (this->cost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->cost(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgStokeRequest)
  return target;
}

size_t MsgStokeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgStokeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string code = 1;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // double cost = 2;
  if (this->cost() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgStokeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgStokeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgStokeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgStokeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgStokeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgStokeRequest)
    MergeFrom(*source);
  }
}

void MsgStokeRequest::MergeFrom(const MsgStokeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgStokeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.cost() != 0) {
    set_cost(from.cost());
  }
}

void MsgStokeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgStokeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgStokeRequest::CopyFrom(const MsgStokeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgStokeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgStokeRequest::IsInitialized() const {
  return true;
}

void MsgStokeRequest::Swap(MsgStokeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgStokeRequest::InternalSwap(MsgStokeRequest* other) {
  using std::swap;
  code_.Swap(&other->code_);
  swap(cost_, other->cost_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgStokeRequest::GetMetadata() const {
  protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgStokeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgStokeResponse::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgStokeResponse::MsgStokeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_schedule_2eproto::InitDefaultsMsgStokeResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgStokeResponse)
}
MsgStokeResponse::MsgStokeResponse(const MsgStokeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  action_ = from.action_;
  // @@protoc_insertion_point(copy_constructor:MsgStokeResponse)
}

void MsgStokeResponse::SharedCtor() {
  action_ = 0;
  _cached_size_ = 0;
}

MsgStokeResponse::~MsgStokeResponse() {
  // @@protoc_insertion_point(destructor:MsgStokeResponse)
  SharedDtor();
}

void MsgStokeResponse::SharedDtor() {
}

void MsgStokeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgStokeResponse::descriptor() {
  ::protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgStokeResponse& MsgStokeResponse::default_instance() {
  ::protobuf_schedule_2eproto::InitDefaultsMsgStokeResponse();
  return *internal_default_instance();
}

MsgStokeResponse* MsgStokeResponse::New(::google::protobuf::Arena* arena) const {
  MsgStokeResponse* n = new MsgStokeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgStokeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgStokeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_ = 0;
  _internal_metadata_.Clear();
}

bool MsgStokeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgStokeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgStokeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgStokeResponse)
  return false;
#undef DO_
}

void MsgStokeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgStokeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 action = 1;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->action(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgStokeResponse)
}

::google::protobuf::uint8* MsgStokeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgStokeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 action = 1;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->action(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgStokeResponse)
  return target;
}

size_t MsgStokeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgStokeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 action = 1;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgStokeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgStokeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgStokeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgStokeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgStokeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgStokeResponse)
    MergeFrom(*source);
  }
}

void MsgStokeResponse::MergeFrom(const MsgStokeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgStokeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action() != 0) {
    set_action(from.action());
  }
}

void MsgStokeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgStokeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgStokeResponse::CopyFrom(const MsgStokeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgStokeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgStokeResponse::IsInitialized() const {
  return true;
}

void MsgStokeResponse::Swap(MsgStokeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgStokeResponse::InternalSwap(MsgStokeResponse* other) {
  using std::swap;
  swap(action_, other->action_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgStokeResponse::GetMetadata() const {
  protobuf_schedule_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_schedule_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
